{"version":3,"sources":["../webpack/bootstrap","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","fitter/src/Fit.js","components/FitCard/Stats/services/EveMath.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","services/dataManipulation/findAttributes.js","components/FitCard/Stats/services/Stat.js","components/FitCard/Stats/services/Summary.js","components/FitCard/Stats/services/Simulator.js","../node_modules/@babel/runtime/helpers/esm/readOnlyError.js","components/FitCard/Stats/services/SimWorker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_arrayLikeToArray","arr","len","length","arr2","Array","_unsupportedIterableToArray","minLen","toString","slice","constructor","from","test","_toConsumableArray","isArray","iter","iterator","TypeError","_defineProperty","obj","configurable","writable","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_classPrivateFieldBase","receiver","privateKey","id","_classPrivateFieldKey","Fit","dogmaSkills","skillBoard","skillsStaticBoardMax","values","reduce","acc","mods","concat","map","mod","debug","undefined","falseDebug","validateChargeSlot","slot","item","charge","itemChargeSize","chargeChargeSize","loadableGroupIDs","ID","attr","includes","groupID","itemCapacity","capacity","chargeVolume","volume","chargePerCycle","chargeVolumePerAct","Math","floor","mapSlots_CONFIG","isIterate","ship","miscSlots","highSlots","midSlots","lowSlots","rigSlots","droneSlots","mapSlots","fit","callback","partialConfig","config","slotName","slots","fitWithDomainID","board","staticBoard","passiveBoard","modifiedAttributeID","isStatic","appliedMod","type","typeAttributesStats","attribute","attributeID","penCount","console","log","baseMod","baseValue","modifyingAttributeValue","operation","appliedValue","penalizedModifyingAttributeValue","isPenalized","modifyingAttributeID","sampleMod","compareFunc","highIsGood","modifiedAttributeHighIsGood","a","b","modStackables","modNotStackables","isStackException","modifiedAttributeStackable","sort","index","array","targetMod","applyMod","domain","func","domainID","typeGroupID","typeSkills","skillTypeID","error","split","typeState","effectCategory","skills","typeID","skillsBoard","skill","typeName","itemMods","chargeMods","dogmaSkill","invalidEffectIDs","extrovertEffects","typeEffectsStats","effect","modifierInfo","effectID","modifyingAttribute","effectName","iconID","getCurrentState","getInitialState","efft","initialState","currentState","find","entry","applyValue","mulValue","perValue","addValue","subValue","divValue","pow","E","EveMath","Cmax","Cnow","Tchg","sqrt","summary","owner","onBoardVector","location","vector","hostileVector","distanceVector","x","anchors","anchor1X","y","anchor1Y","distance","trackingValue","range","tracking","signatureResolution","signatureRadius","misc","_angularVelocity","_trackingPart","getRangeModifier","toFixed","optimalRange","isSentry","getTurretAcurracy","targetUnitVector","targetVelocity","propulsion","orbitVelocity","droneAccuracyModifier","absoluteVelocity","droneVector","droneLocation","orbitRange","explosionRadius","explosionVelocity","damageReductionFactor","simplePart","complexPart","min","randomDamageModifier","random","optimal","falloff","falloffRange","denominator","numerator","max","_distancePart","_slicedToArray","_arr","_n","_d","_e","_s","_i","next","done","err","_setPrototypeOf","setPrototypeOf","__proto__","_inherits","subClass","superClass","_getPrototypeOf","getPrototypeOf","_typeof","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","e","result","Super","NewTarget","this","findAttributebyID","maximumVelocity","angularVelocity","fallOff","perpendicularVector","perpendicularUnitVector","unitVector","velocityVector","Stat","propCapacitor","capacitor","damage","defense","stableLevel","capacitor_stableLevel","engineering","resource","miscellaneous","turretLauncherDamage","effective","alpha","turretLauncherRange","droneDamage","turrets","launchers","drones","turretLauncherDamageSummaries","damage_getSummary","damagePerAct","maxDps","activationInfo","duration","effectiveDps","e_duration","overlappingRange","droneSummaries","drone","typeCount","damageSummaries","ambientChargeRate","boosterChargeRate","activationUseRate","cus","capacitorUsePerSec","dominID","Tnow","capacitorDeltas","capacitorLevel","delta","getAmbientChargeRateMath","positiveDeltas","capacitorDelta","capacitorBonus","resistance","defense_resistance","active","armor","HP","EM","TH","KI","EX","shield","structure","shieldBonus","armorBonus","structureBonus","pg","load","output","cpu","pgLoad","pgOutput","cpuLoad","cpuOutput","Number","turret","launcher","calibration","droneBandwidth","droneBay","droneActive","turretHardpoint","launcherHardpoint","droneCapacity","mountedTurrets","mountedLaunchers","mountedCalibration","mountedDroneBandwidth","droneVolume","sensor","scanResolution","maximumLockedTarget","maximumTargetingRange","strength","gravimetric","magnetometric","ladar","radar","inertialModifier","warpSpeedMultiplier","cargoBayCapacity","gravimetricSensorStrength","magnetometricSensorStrength","ladarSensorStrength","radarSensorStrength","Infinity","activationLimit","reloadTime","activationCost","activationTime","defaultStat","isTurretFitted","isActivated","isLauncherFitted","damage_damagePerAct","getActivationInfo","damage_range","damageModifier","EM_damage","TH_damage","KI_damage","EX_damage","isDrone","typeDroneSize","chargeInfo","capacitor_getChargeInfo","bonusRate","boosterSlot","capacitor_getBonusPerAct_self","shipAttrs","armorHP","armorEM","armorTH","armorKI","armorEX","shieldHP","shieldEM","shieldTH","shieldKI","shieldEX","shieldChargeRate","structureHP","structureEM","structureTH","structureKI","structureEX","defense_getSummary","bonusPerAct","defense_getBonusPerAct","activePropulsionModules","isPropulsionModule","shipBaseMaximumVelocity","propModuleMaximumVelocityBonusMul","propModuleThrust","propModuleMassAdd","shipMass","mass","thisEffectsNeedCharge","capPrioritySet","alwaysOn","mostTrivial","turretDamage","shieldHarden","shieldBoost","shieldBoostAncillaryFueled","shieldBoostAncillary","armorHardener","armorBoost","armorBoostAncillaryFueled","armorBoostAncillary","damageControl","structureBoost","capacitorNeutralizer","capacitorTransmitter","Summary","resistanceSlots","record","activeRecord","getResistanceTable_getRecords","path","passiveRecord","recordFrag","slotType","slotNum","state","booster_bonusPerAct","transfer_bonusPerAct","neut_bonusPerAct","isNosferatuBloodRaiderOverriden","isCapacitorTransmitter","isNosferatu","updateSummaries","summarizedSlots","getSummary_ship","getSummaries","_slots","addSummaries_duplicateSlots","blankSlots","droneSlot","fill","addSummaries","getSummarizedSlots","targetSlots","_slot","SimFit","toPath","_droneSlots","addSummaries_duplicateDroneSlots","JSON","parse","stringify","slotCount","slotString","getResistanceTable","summaries","records","resistanceTable","getResistanceTable_applyState","moduleSummary","heatDamage","activationDataSet","createActivationDataSet","join","effectSummary","getSummary_damage","getSummary_defense","getSummary_capacitor","activationPriority","getActivationPriority","activationState","itemID","chargeID","description","marketGroupID","droneSumamry","getSummary_drone","situation_decription","isActive","lastActivation","nextActivation","nextActivationTick","activationLeft","shieldHardener","targetSlot","Simulator","fit1","situation","summarizedSlots1","onboard","summarizedSlots2","hostile","HAL","manageActivation_getCapUsageLevels","capLog","schedules","getSchedules","manageSchedules","simulate_oneTick","tick","simulate_capacitor","simulate_shield","activateDamage","activateDefense","activateCapacitor","capacitorState","simulate_capacitor_getDelta","simulate_passive_capacitor_getDelta","capacitorInfo","shieldState","simulate_passive_shield_getDelta","shieldInfo","simulate_defense_getDelta","armorDelta","shieldDelta","structureDelta","root","simulate_damage_getDelta","situationalModifiedSummary","activateDamage_getAlpha","shieldDamage","remaining","appplied","armorDamage","structureDamage","shot","damageCapMultiplier","alpha_damaging","EM_applied","EM_damaging","TH_applied","TH_damaging","KI_applied","KI_damaging","EX_applied","EX_damaging","alpha_applied","EM_remaining","EM_blocked","TH_remaining","TH_blocked","KI_remaining","KI_blocked","EX_remaining","EX_blocked","alpha_blocked","situationalMul","droneAccuracy","getDroneAccracy","getTurretRandomDamageModifier","turretAccuracy","launcherAccracy","getLauncherAccuracy","getLauncherDamageModifier","ownerCapacitorHP","targetCapacitorHP","bonusPerActOwner","bonusPerActTarget","maxBonusPerAct","symmetricBonusPerAct","rangeModifier","simulateActivationCapUse","info","simulateActivation","getSchedules_setTarget","summarizedSlot","fragment","time","schedule","manageSchedules_validate","isCapacitorValidated","manageSchedules_validateCapacitor","isStructureValidated","manageSchedules_validateStructure","rootStructureHP","Error","_target","_summary","currentTime","warn","subSecSchedule","capUsageRates","capUsageRate","simulate","slots1"],"mappings":"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","file":"e2536cc46042bedc4f42.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _classPrivateFieldBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n\n  return receiver;\n}","var id = 0;\nexport default function _classPrivateFieldKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}","export default class Fit {\r\n  static validateChargeSlot = function (slot) {\r\n    if (!slot || !slot.item || !slot.charge) return false;\r\n\r\n    const item = slot.item;\r\n    const charge = slot.charge;\r\n\r\n    // Charge size[attributeID] = 128\r\n    const itemChargeSize = Fit.#common_findAttributeByID(item, 128);\r\n    const chargeChargeSize = Fit.#common_findAttributeByID(charge, 128);\r\n    if (\r\n      !!itemChargeSize &&\r\n      !!chargeChargeSize &&\r\n      itemChargeSize.value !== chargeChargeSize.value\r\n    )\r\n      return false;\r\n\r\n    // Used with (Charge Group)[attributeID] = 604, 605, 606, 609, 610\r\n    const loadableGroupIDs = [604, 605, 606, 609, 610]\r\n      .map((ID) => {\r\n        const attr = Fit.#common_findAttributeByID(item, ID);\r\n        if (!attr) return undefined;\r\n        else return attr.value;\r\n      })\r\n      .filter((value) => value);\r\n    if (loadableGroupIDs.length === 0) return false;\r\n\r\n    if (!loadableGroupIDs.includes(charge.groupID)) return false;\r\n\r\n    const itemCapacity = item.capacity;\r\n    const chargeVolume = charge.volume;\r\n    const chargePerCycle = Fit.#common_findAttributeByID(item, 56)?.value; //attributeID: 56, attributeName: \"Charges Per Cycle\"\r\n    const chargeVolumePerAct = !!chargePerCycle\r\n      ? chargeVolume * chargePerCycle\r\n      : 0;\r\n    const activationLimit = Math.floor(itemCapacity / chargeVolumePerAct);\r\n    if (activationLimit <= 0) return false;\r\n\r\n    return true;\r\n  };\r\n\r\n  static mapSlots_CONFIG = {\r\n    isIterate: {\r\n      ship: false,\r\n      miscSlots: false,\r\n      highSlots: false,\r\n      midSlots: false,\r\n      lowSlots: false,\r\n      rigSlots: false,\r\n      droneSlots: false,\r\n    },\r\n  };\r\n  static mapSlots = function (fit, callback, partialConfig) {\r\n    const config = {\r\n      isIterate: {\r\n        ...Fit.mapSlots_CONFIG.isIterate,\r\n        ...partialConfig.isIterate,\r\n      },\r\n    };\r\n\r\n    return [\r\n      \"ship\",\r\n      \"miscSlots\",\r\n      \"highSlots\",\r\n      \"midSlots\",\r\n      \"lowSlots\",\r\n      \"rigSlots\",\r\n      \"droneSlots\",\r\n    ].reduce((acc, slotName) => {\r\n      if (config.isIterate[slotName] === true)\r\n        return acc.concat(Fit.#mapSlots_slots(fit[slotName], callback));\r\n      else return acc;\r\n    }, []);\r\n  };\r\n  static #mapSlots_slots = function (slots, callback) {\r\n    if (!slots) return [];\r\n    return slots.map((slot) => {\r\n      return callback(slot);\r\n    });\r\n  };\r\n\r\n  static apply = function (fit) {\r\n    const fitWithDomainID = Fit.#giveDomainID(fit);\r\n\r\n    const board = Fit.#createBoard(fitWithDomainID);\r\n    const staticBoard = Fit.#applyBoard_createStaticBoard(board);\r\n\r\n    return Fit.#applyBoard(fitWithDomainID, staticBoard);\r\n  };\r\n\r\n  static #applyBoard = function (fit, staticBoard) {\r\n    const ship = Fit.#applyBoard_type(fit.ship, staticBoard);\r\n    const miscSlots = Fit.#applyBoard_slots(fit.miscSlots, staticBoard);\r\n    const highSlots = Fit.#applyBoard_slots(fit.highSlots, staticBoard);\r\n    const midSlots = Fit.#applyBoard_slots(fit.midSlots, staticBoard);\r\n    const lowSlots = Fit.#applyBoard_slots(fit.lowSlots, staticBoard);\r\n    const rigSlots = Fit.#applyBoard_slots(fit.rigSlots, staticBoard);\r\n    const droneSlots = Fit.#applyBoard_slots(fit.droneSlots, staticBoard);\r\n\r\n    return {\r\n      ship,\r\n      miscSlots,\r\n      lowSlots,\r\n      midSlots,\r\n      highSlots,\r\n      rigSlots,\r\n      droneSlots,\r\n    };\r\n  };\r\n  static #applyBoard_createStaticBoard = function (board) {\r\n    const staticBoard = {};\r\n    const passiveBoard = Fit.#applyBoard_createPassiveBoard(board);\r\n\r\n    board.forEach((mod) => {\r\n      if (!staticBoard[mod.modifiedAttributeID])\r\n        staticBoard[mod.modifiedAttributeID] = [];\r\n      if (mod.isStatic === true) staticBoard[mod.modifiedAttributeID].push(mod);\r\n      else {\r\n        const appliedMod = Fit.#applyBoard_mod(mod, passiveBoard);\r\n        appliedMod[\"isStatic\"] = true;\r\n        staticBoard[mod.modifiedAttributeID].push(appliedMod);\r\n      }\r\n    });\r\n\r\n    return staticBoard;\r\n  };\r\n  static #applyBoard_createPassiveBoard = function (board) {\r\n    const passiveBoard = {};\r\n\r\n    board.forEach((mod) => {\r\n      if (!passiveBoard[mod.modifiedAttributeID])\r\n        passiveBoard[mod.modifiedAttributeID] = [];\r\n      passiveBoard[mod.modifiedAttributeID].push(mod);\r\n    });\r\n\r\n    return passiveBoard;\r\n  };\r\n  static #applyBoard_slots = function (slots, passiveBoard) {\r\n    return slots.map((slot) => {\r\n      const item = slot.item;\r\n      const charge = slot.charge;\r\n      return {\r\n        ...slot,\r\n        item: Fit.#applyBoard_type(item, passiveBoard),\r\n        charge: Fit.#applyBoard_type(charge, passiveBoard),\r\n      };\r\n    });\r\n  };\r\n  static #applyBoard_type = function (type, passiveBoard) {\r\n    if (!type || !type.typeAttributesStats) return type;\r\n\r\n    const typeAttributesStats = type.typeAttributesStats.map((attribute) => {\r\n      return Fit.#applyBoard_attribute(type, attribute, passiveBoard);\r\n    });\r\n\r\n    return { ...type, typeAttributesStats: typeAttributesStats };\r\n  };\r\n  static #applyBoard_attribute = function (type, attr, passiveBoard) {\r\n    const mods = passiveBoard[attr.attributeID];\r\n    if (!mods || mods.length === 0) return attr;\r\n\r\n    let value = attr.value;\r\n    let penCount = 0;\r\n    if (!!attr.debug || !!attr.falseDebug) console.log(\"ERROR\", \"debugCorrupt\");\r\n    const debug = [];\r\n    const falseDebug = [];\r\n\r\n    Fit.#applyBoard_sortMods(\r\n      mods.map((baseMod) => Fit.#applyBoard_mod(baseMod, passiveBoard))\r\n    ).forEach((mod) => {\r\n      if (Fit.#applyBoard_modIsTypeApplicable(type, mod)) {\r\n        const baseValue = value;\r\n        value = Fit.#common_operation(\r\n          value,\r\n          mod.modifyingAttributeValue,\r\n          mod.operation,\r\n          penCount\r\n        );\r\n        debug.push({\r\n          ...mod,\r\n          penCount,\r\n          values: {\r\n            baseValue: baseValue,\r\n            appliedValue: value,\r\n            penalizedModifyingAttributeValue: Fit.#common_penalizedModifyingValue(\r\n              mod.modifyingAttributeValue,\r\n              mod.operation,\r\n              penCount\r\n            ),\r\n          },\r\n        });\r\n        if (mod.isPenalized === true) penCount++;\r\n      } else falseDebug.push(mod);\r\n    });\r\n\r\n    return { ...attr, value: value, debug, falseDebug };\r\n  };\r\n  static #applyBoard_mod = function (mod, passiveBoard) {\r\n    if (\r\n      mod.modifyingAttributeID === mod.modifiedAttributeID ||\r\n      mod.isStatic === true\r\n    )\r\n      return mod;\r\n\r\n    const mods = passiveBoard[mod.modifyingAttributeID];\r\n    if (!mods || mods.length === 0) return mod;\r\n\r\n    let value = mod.modifyingAttributeValue;\r\n    let penCount = 0;\r\n    if (!!mod.debug || !!mod.falseDebug) console.log(\"ERROR\", \"debugCorrupt\");\r\n    const debug = [];\r\n    const falseDebug = [];\r\n\r\n    Fit.#applyBoard_sortMods(\r\n      mods.map((baseMod) => Fit.#applyBoard_mod(baseMod, passiveBoard))\r\n    ).forEach((appliedMod) => {\r\n      if (Fit.#applyBoard_modIsModApplicable(mod, appliedMod)) {\r\n        const baseValue = value;\r\n        value = Fit.#common_operation(\r\n          value,\r\n          appliedMod.modifyingAttributeValue,\r\n          appliedMod.operation,\r\n          penCount\r\n        );\r\n\r\n        debug.push({\r\n          ...appliedMod,\r\n          penCount,\r\n          values: {\r\n            baseValue: baseValue,\r\n            appliedValue: value,\r\n            penalizedModifyingAttributeValue: Fit.#common_penalizedModifyingValue(\r\n              appliedMod.modifyingAttributeValue,\r\n              appliedMod.operation,\r\n              penCount\r\n            ),\r\n          },\r\n        });\r\n        if (appliedMod.isPenalized === true) penCount++;\r\n      } else falseDebug.push(appliedMod);\r\n    });\r\n\r\n    return { ...mod, modifyingAttributeValue: value, debug, falseDebug };\r\n  };\r\n  static #applyBoard_sortMods = function (mods) {\r\n    const sampleMod = mods[0];\r\n\r\n    let compareFunc = () => true;\r\n    const highIsGood = sampleMod.modifiedAttributeHighIsGood;\r\n    if (highIsGood === true)\r\n      compareFunc = (a, b) => {\r\n        if (a.operation === b.operation)\r\n          return b.modifyingAttributeValue - a.modifyingAttributeValue;\r\n\r\n        if (a.operation === \"prePercent\" || a.operation === \"postPercent\")\r\n          return b.modifyingAttributeValue - a.modifyingAttributeValue - 1;\r\n\r\n        if (b.operation === \"prePercent\" || b.operation === \"postPercent\")\r\n          return 1 + b.modifyingAttributeValue - a.modifyingAttributeValue;\r\n      };\r\n    else if (highIsGood === false)\r\n      compareFunc = (a, b) => {\r\n        if (a.operation === b.operation)\r\n          return a.modifyingAttributeValue - b.modifyingAttributeValue;\r\n\r\n        if (a.operation === \"prePercent\" || a.operation === \"postPercent\")\r\n          return 1 + a.modifyingAttributeValue - b.modifyingAttributeValue;\r\n\r\n        if (b.operation === \"prePercent\" || b.operation === \"postPercent\")\r\n          return a.modifyingAttributeValue - b.modifyingAttributeValue - 1;\r\n      };\r\n    const modStackables = [];\r\n    const modNotStackables = [];\r\n    mods.forEach((mod) => {\r\n      if (\r\n        mod.operation === \"modAdd\" ||\r\n        mod.operation === \"modSub\" ||\r\n        mod.operation === \"postDiv\" ||\r\n        mod.isStackException === true\r\n      )\r\n        modStackables.push(mod);\r\n      else modNotStackables.push(mod);\r\n    });\r\n\r\n    const isModstackable = sampleMod.modifiedAttributeStackable;\r\n\r\n    if (isModstackable === false) {\r\n      modNotStackables.sort(compareFunc);\r\n      modNotStackables.forEach((mod, index, array) => {\r\n        array[index] = { ...mod, isPenalized: true };\r\n      });\r\n    }\r\n    return modStackables.concat(modNotStackables);\r\n  };\r\n  static #applyBoard_modIsModApplicable = function (targetMod, applyMod) {\r\n    if (!Fit.#applyBoard_modIsStateApplicable(applyMod)) {\r\n      /*  if (\r\n        !(\r\n          applyMod.typeState === \"activation\" &&\r\n          applyMod.effectCategory === \"overload\"\r\n        )\r\n      )\r\n        console.log(\r\n          \"STATE\",\r\n          `${applyMod.typeState} <-/- ${applyMod.effectCategory}`,\r\n          targetMod,\r\n          \"<-\",\r\n          applyMod\r\n        ); */ //TESTETS\r\n      return false;\r\n    }\r\n    switch (applyMod.domain) {\r\n      case \"itemID\":\r\n        switch (applyMod.func) {\r\n          case \"ItemModifier\":\r\n            return targetMod.domainID === applyMod.domainID;\r\n          /* default:\r\n            return false; */\r\n        }\r\n      case \"shipID\":\r\n        switch (applyMod.func) {\r\n          case \"ItemModifier\":\r\n            return targetMod.domainID === \"ship\";\r\n          case \"LocationGroupModifier\":\r\n            return targetMod.typeGroupID === applyMod.groupID;\r\n          case \"LocationRequiredSkillModifier\":\r\n            return targetMod?.typeSkills?.includes(applyMod.skillTypeID);\r\n          /* default:\r\n            return false; */\r\n        }\r\n      case \"charID\":\r\n        switch (applyMod.func) {\r\n          case \"OwnerRequiredSkillModifier\":\r\n            return targetMod?.typeSkills?.includes(applyMod.skillTypeID);\r\n        }\r\n      /*    case \"structureID\":\r\n        return false; */\r\n      default:\r\n        console.error(\"MOD_APPLICABLE_UNKNOWN\", targetMod, \"<-\", applyMod);\r\n        return false;\r\n    }\r\n  };\r\n  static #applyBoard_modIsTypeApplicable = function (type, mod) {\r\n    if (!Fit.#applyBoard_modIsStateApplicable(mod)) {\r\n      /* if (\r\n        !(mod.typeState === \"activation\" && mod.effectCategory === \"overload\")\r\n      )\r\n        console.log(\r\n          \"STATE\",\r\n          `${mod.typeState} <-/- ${mod.effectCategory}`,\r\n          type,\r\n          \"<-\",\r\n          mod\r\n        ); */ //TESTETS\r\n      return false;\r\n    }\r\n    if (type.domainID === undefined) console.log(\"domainID missing\", type);\r\n    switch (mod.domain) {\r\n      case \"itemID\":\r\n        switch (mod.func) {\r\n          case \"ItemModifier\":\r\n            return type.domainID === mod.domainID;\r\n          /* default:\r\n            return false; */\r\n        }\r\n      case \"shipID\":\r\n        switch (mod.func) {\r\n          case \"ItemModifier\":\r\n            return type.domainID === \"ship\";\r\n          case \"LocationGroupModifier\":\r\n            return type.groupID === mod.groupID;\r\n          case \"LocationRequiredSkillModifier\":\r\n            return (\r\n              !!type.typeSkills && type.typeSkills.includes(mod.skillTypeID)\r\n            );\r\n          /* default:\r\n            return false; */\r\n        }\r\n      case \"charID\":\r\n        switch (mod.func) {\r\n          case \"OwnerRequiredSkillModifier\":\r\n            return (\r\n              !!type.typeSkills && type.typeSkills.includes(mod.skillTypeID)\r\n            );\r\n          case \"ItemModifier\":\r\n            return true;\r\n          /* default:\r\n            return false; */\r\n        }\r\n      case \"otherID\":\r\n        switch (mod.func) {\r\n          case \"ItemModifier\":\r\n            return (\r\n              type.domainID.split(\".\")[0] === mod.domainID.split(\".\")[0] &&\r\n              type.domainID.split(\".\")[1] === mod.domainID.split(\".\")[1]\r\n            );\r\n          /* default:\r\n            return false; */\r\n        }\r\n      case \"structureID\":\r\n        return false;\r\n      default:\r\n        console.error(\"TYPE_APPLICABLE_UNKNOWN\", type, \"<-\", mod); //TESTETS\r\n        return false;\r\n    }\r\n  };\r\n  static #applyBoard_modIsStateApplicable = function (mod) {\r\n    switch (mod.typeState) {\r\n      case \"overload\":\r\n        return true;\r\n      case \"activation\":\r\n        switch (mod.effectCategory) {\r\n          case \"overload\":\r\n            return false;\r\n          default:\r\n            return true;\r\n        }\r\n      case \"passive\":\r\n        switch (mod.effectCategory) {\r\n          case \"overload\":\r\n          case \"target\":\r\n          case \"activation\":\r\n            return false;\r\n          default:\r\n            return true;\r\n        }\r\n      case \"offline\":\r\n        switch (mod.effectCategory) {\r\n          default:\r\n            return false;\r\n        }\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  static #giveDomainID = function (fit) {\r\n    const skills = Fit.#giveDomainID_skills(fit.skills);\r\n    const ship = { ...fit.ship, domainID: \"ship\" };\r\n    const miscSlots = Fit.#giveDomainID_slots(fit.miscSlots, \"miscSlots\");\r\n    const lowSlots = Fit.#giveDomainID_slots(fit.lowSlots, \"lowSlots\");\r\n    const midSlots = Fit.#giveDomainID_slots(fit.midSlots, \"midSlots\");\r\n    const highSlots = Fit.#giveDomainID_slots(fit.highSlots, \"highSlots\");\r\n    const rigSlots = Fit.#giveDomainID_slots(fit.rigSlots, \"rigSlots\");\r\n    const droneSlots = Fit.#giveDomainID_slots(fit.droneSlots, \"droneSlots\");\r\n\r\n    return {\r\n      skills,\r\n      ship,\r\n      miscSlots,\r\n      lowSlots,\r\n      midSlots,\r\n      highSlots,\r\n      rigSlots,\r\n      droneSlots,\r\n    };\r\n  };\r\n  static #giveDomainID_slots = function (slots, slotName) {\r\n    if (!slots || slots.constructor !== Array) return undefined;\r\n\r\n    return slots.map((slot, index) => {\r\n      const item = !!slot.item.typeID\r\n        ? { ...slot.item, domainID: `${slotName}.${index}.item` }\r\n        : false;\r\n      const charge = !!slot.charge.typeID\r\n        ? { ...slot.charge, domainID: `${slotName}.${index}.charge` }\r\n        : false;\r\n      return { item, charge };\r\n    });\r\n  };\r\n  static #giveDomainID_skills = function (skillsBoard) {\r\n    if (!skillsBoard || skillsBoard.constructor !== Array) {\r\n      const dogmaSkills = skillsBoard;\r\n      return dogmaSkills;\r\n    } else if (skillsBoard[0].domainID !== undefined) {\r\n      const skillsStaticBoardPlane = skillsBoard;\r\n      return skillsStaticBoardPlane;\r\n    }\r\n    return skillsBoard.map((skill) => ({\r\n      ...skill,\r\n      domainID: `skill:${skill.typeName}`,\r\n    }));\r\n  };\r\n\r\n  static #createBoard = function (fit) {\r\n    // skills will be two type: skills(Object) or pre made skills_modifiers(Array)\r\n    const skills = Fit.#createBoard_skills(fit.skills);\r\n    const ship = Fit.#createBoard_singleType(fit.ship, true);\r\n    const miscSlots = Fit.#createBoard_slots(fit.miscSlots, true);\r\n    const lowSlots = Fit.#createBoard_slots(fit.lowSlots);\r\n    const midSlots = Fit.#createBoard_slots(fit.midSlots);\r\n    const highSlots = Fit.#createBoard_slots(fit.highSlots);\r\n    const rigSlots = Fit.#createBoard_slots(fit.rigSlots);\r\n    const droneSlots = Fit.#createBoard_slots(fit.droneSlots);\r\n\r\n    return [\r\n      ...skills,\r\n      ...ship,\r\n      ...miscSlots,\r\n      ...lowSlots,\r\n      ...midSlots,\r\n      ...highSlots,\r\n      ...rigSlots,\r\n      ...droneSlots,\r\n    ];\r\n  };\r\n  static #createBoard_slots = function (slots, isStackException = false) {\r\n    if (!slots || slots.constructor !== Array) return [];\r\n\r\n    const mods = [];\r\n    slots.forEach((slot) => {\r\n      const itemMods = Fit.#createBoard_singleType(slot.item, isStackException);\r\n      const chargeMods = Fit.#createBoard_singleType(slot.charge, true);\r\n      if (!!itemMods) itemMods.forEach((mod) => mods.push(mod));\r\n      if (!!chargeMods) chargeMods.forEach((mod) => mods.push(mod));\r\n    });\r\n\r\n    return mods;\r\n  };\r\n  static extractSkillsStaticPlaneBoard(dogmaSkills) {\r\n    if (dogmaSkills.constructor !== Object) return [];\r\n\r\n    const skillBoard = Fit.#createBoard_skills(dogmaSkills);\r\n    const skillsStaticBoardMax = Fit.#applyBoard_createStaticBoard(skillBoard);\r\n    const skillsStaticBoardMed = Object.values(skillsStaticBoardMax)\r\n      .reduce((acc, mods) => acc.concat(mods), [])\r\n      .map((mod) => ({ ...mod, debug: undefined, falseDebug: undefined }));\r\n\r\n    return skillsStaticBoardMed;\r\n  }\r\n  static #createBoard_skills = function (dogmaSkills) {\r\n    if (dogmaSkills.constructor === Array) {\r\n      const skillsBoard = dogmaSkills;\r\n      return skillsBoard;\r\n    }\r\n\r\n    return Object.values(dogmaSkills).reduce((acc, dogmaSkill) => {\r\n      const mods = Fit.#createBoard_singleType(dogmaSkill, true);\r\n      const board = mods.map((mod) => ({\r\n        ...mod,\r\n        domainID: `skill:${mod.typeName}`,\r\n      }));\r\n      return acc.concat(board);\r\n    }, []);\r\n  };\r\n  static #createBoard_singleType = function (type, isStackException = false) {\r\n    if (!type) return [];\r\n\r\n    // effectID: 132,effectName: \"skillEffect\",\r\n    const invalidEffectIDs = [132];\r\n    // ExtrovertEffect is effect have modifierInfo\r\n    // Existence of modifierInfo ensures effect affect anonymous attribute with given value\r\n    const extrovertEffects = !!type.typeEffectsStats\r\n      ? type.typeEffectsStats.filter(\r\n          (effect) =>\r\n            effect.modifierInfo !== undefined &&\r\n            !invalidEffectIDs.includes(effect.effectID)\r\n        )\r\n      : [];\r\n\r\n    const mods = [];\r\n    extrovertEffects.forEach((effect) => {\r\n      effect.modifierInfo.forEach((mod) => {\r\n        const modifyingAttribute = Fit.#common_findAttributeByID(\r\n          type,\r\n          mod.modifyingAttributeID\r\n        );\r\n        const modifyingAttributeValue = !!mod.modifyingAttributeValue\r\n          ? mod.modifyingAttributeValue\r\n          : modifyingAttribute?.value;\r\n\r\n        mods.push({\r\n          domainID: type.domainID,\r\n          typeName: type.typeName,\r\n          ...mod,\r\n          effectName: effect.effectName,\r\n          effectCategory: effect.effectCategory,\r\n          modifyingAttributeValue: modifyingAttributeValue,\r\n          typeID: type.typeID,\r\n          typeState: type.iconID !== 33 ? type.typeState : \"passive\",\r\n          typeGroupID: type.groupID,\r\n          typeSkills: type.typeSkills,\r\n          isStackException:\r\n            mod.isStackException !== undefined\r\n              ? mod.isStackException\r\n              : isStackException,\r\n        });\r\n      });\r\n    });\r\n\r\n    return mods;\r\n  };\r\n  static getCurrentState = function (type) {\r\n    return Fit.#createBoard_setState(type);\r\n  };\r\n  static getInitialState = function (type) {\r\n    if (!type || !type.typeEffectsStats) return undefined;\r\n    if (type.iconID === 33) return \"passive\"; // if type is skill\r\n\r\n    return type.typeEffectsStats.reduce((acc, efft) => {\r\n      if (\r\n        (efft.effectCategory === \"activation\" && efft.effectID !== 16) ||\r\n        efft.effectCategory === \"target\"\r\n      )\r\n        //effectCategory: \"activation\", effectID: 16, effectName: \"online\"\r\n        return \"activation\";\r\n\r\n      return acc;\r\n    }, \"passive\");\r\n  };\r\n  static #createBoard_setState = function (type) {\r\n    if (!type && type !== 0) return undefined;\r\n    if (!type.typeEffectsStats || type.iconID === 33) return \"passive\"; // if type is skill\r\n    const initialState = type.typeEffectsStats.reduce((acc, efft) => {\r\n      if (\r\n        (efft.effectCategory === \"activation\" && efft.effectID !== 16) ||\r\n        efft.effectCategory === \"target\"\r\n      )\r\n        //effectCategory: \"activation\", effectID: 16, effectName: \"online\"\r\n        return \"activation\";\r\n\r\n      return acc;\r\n    }, \"passive\");\r\n    const currentState = type.typeState;\r\n\r\n    if (currentState === undefined) return initialState;\r\n    if (initialState === \"passive\" && currentState === \"activation\")\r\n      return \"passive\";\r\n    return currentState;\r\n  };\r\n\r\n  static #common_findAttributeByID = function (type, attributeID) {\r\n    if (!type || !type.typeAttributesStats) return undefined;\r\n    if (type.typeAttributesStats.constructor !== Array) return undefined;\r\n\r\n    const attribute = type.typeAttributesStats.find(\r\n      (entry) => entry.attributeID === attributeID\r\n    );\r\n\r\n    return attribute;\r\n  };\r\n  static #common_operation = function (\r\n    baseValue,\r\n    applyValue,\r\n    operation,\r\n    penCount\r\n  ) {\r\n    //TODO: findout why does eve developers make shit like this typeID=31760 effect is weird\r\n    if (applyValue === undefined) return baseValue;\r\n\r\n    let value = baseValue;\r\n    switch (operation) {\r\n      case \"preMul\":\r\n      case \"postMul\":\r\n        value = Fit.#oepration_mul(baseValue, applyValue, penCount);\r\n        break;\r\n      case \"prePercent\":\r\n      case \"postPercent\":\r\n        value = Fit.#oepration_per(baseValue, applyValue, penCount);\r\n        break;\r\n      case \"modAdd\":\r\n        value = Fit.#operation_add(baseValue, applyValue);\r\n        break;\r\n      case \"modSub\":\r\n        value = Fit.#operation_sub(baseValue, applyValue);\r\n        break;\r\n      case \"postDiv\":\r\n        value = Fit.#operation_div(baseValue, applyValue);\r\n        break;\r\n      case \"postAssignment\":\r\n        return applyValue;\r\n      default:\r\n        break;\r\n    }\r\n    return value;\r\n  };\r\n  static #oepration_mul = function (baseValue, mulValue, penCount = 0) {\r\n    return baseValue * ((mulValue - 1) * Fit.#common_penaltyMul(penCount) + 1);\r\n  };\r\n  static #oepration_per = function (baseValue, perValue, penCount = 0) {\r\n    return (\r\n      baseValue * ((perValue / 100) * Fit.#common_penaltyMul(penCount) + 1)\r\n    );\r\n  };\r\n  static #operation_add = function (baseValue, addValue) {\r\n    return baseValue + addValue;\r\n  };\r\n  static #operation_sub = function (baseValue, subValue) {\r\n    return baseValue - subValue;\r\n  };\r\n  static #operation_div = function (baseValue, divValue) {\r\n    return baseValue / divValue;\r\n  };\r\n  static #common_penaltyMul = function (penCount) {\r\n    return Math.pow(Math.E, -0.140274 * penCount * penCount);\r\n  };\r\n  static #common_penalizedModifyingValue = function (\r\n    applyValue,\r\n    operation,\r\n    penCount\r\n  ) {\r\n    switch (operation) {\r\n      case \"preMul\":\r\n      case \"postMul\":\r\n        return 1 + Fit.#common_penaltyMul(penCount) * (applyValue - 1);\r\n      case \"prePercent\":\r\n      case \"postPercent\":\r\n        return Fit.#common_penaltyMul(penCount) * applyValue;\r\n      case \"modAdd\":\r\n      case \"modSub\":\r\n        return applyValue;\r\n      case \"postDiv\":\r\n        return applyValue / Fit.#common_penaltyMul(penCount);\r\n      default:\r\n        return applyValue;\r\n    }\r\n  };\r\n}\r\n","export default class EveMath {\r\n  static getAmbientChargeRateMath(Cmax, Cnow, Tchg) {\r\n    return ((10 * Cmax) / Tchg) * (Math.sqrt(Cnow / Cmax) - Cnow / Cmax) || 0;\r\n  }\r\n  static getTurretAcurracy(summary, owner, target) {\r\n    const onBoardVector = owner.summary.location.vector;\r\n    const hostileVector = target.summary.location.vector;\r\n    const distanceVector = {\r\n      x:\r\n        target.summary.location.anchors.anchor1X -\r\n        owner.summary.location.anchors.anchor1X,\r\n      y:\r\n        target.summary.location.anchors.anchor1Y -\r\n        owner.summary.location.anchors.anchor1Y,\r\n    };\r\n    const distance =\r\n      Math.sqrt(Math.pow(distanceVector.x, 2) + Math.pow(distanceVector.y, 2)) /\r\n      100;\r\n\r\n    const trackingValue =\r\n      summary.range.tracking * (40000 / summary.range.signatureResolution);\r\n    const signatureRadius = target.summary.capacity.misc.signatureRadius;\r\n\r\n    const _angularVelocity = EveMath.#getTurretAcurracy_angularVelocuty(\r\n      distance,\r\n      distanceVector,\r\n      onBoardVector,\r\n      hostileVector\r\n    );\r\n    const _trackingPart = EveMath.#getTurretAcurracy_trackingPart(\r\n      _angularVelocity,\r\n      trackingValue,\r\n      signatureRadius\r\n    );\r\n\r\n    const trackingModifier = Math.pow(0.5, _trackingPart);\r\n    const rangeModifier = EveMath.getRangeModifier(summary, owner, target);\r\n\r\n    return (trackingModifier * rangeModifier).toFixed(3);\r\n  }\r\n  static getLauncherAccuracy(summary, owner, target) {\r\n    const distanceVector = {\r\n      x:\r\n        target.summary.location.anchors.anchor1X -\r\n        owner.summary.location.anchors.anchor1X,\r\n      y:\r\n        target.summary.location.anchors.anchor1Y -\r\n        owner.summary.location.anchors.anchor1Y,\r\n    };\r\n    const distance =\r\n      Math.sqrt(Math.pow(distanceVector.x, 2) + Math.pow(distanceVector.y, 2)) /\r\n      100;\r\n\r\n    return summary.range.optimalRange < distance * 1000 ? 0 : 1;\r\n  }\r\n  static getDroneAccracy(summary, owner, target) {\r\n    // owner is owner of drone! which is ship\r\n    if (summary.isSentry)\r\n      return EveMath.getTurretAcurracy(summary, owner, target);\r\n\r\n    const targetUnitVector = EveMath.#common_makeUnitVector(\r\n      target.summary.location.vector\r\n    );\r\n    const targetVelocity =\r\n      Math.sqrt(\r\n        Math.pow(target.summary.location.vector.x, 2) +\r\n          Math.pow(target.summary.location.vector.y, 2)\r\n      ) * 3;\r\n    const isChasing =\r\n      summary.capacity.propulsion.orbitVelocity < targetVelocity;\r\n    if (isChasing) {\r\n      const droneAccuracyModifier =\r\n        EveMath.#getDroneAccracy_getAccuracyModifier(summary, targetVelocity);\r\n      const absoluteVelocity = summary.capacity.propulsion.orbitVelocity;\r\n      const droneVector = {\r\n        x: targetUnitVector.x * (absoluteVelocity / 3), // Currently 1px = 3m/s\r\n        y: targetUnitVector.y * (absoluteVelocity / 3),\r\n      };\r\n      const droneLocation = {\r\n        summary: {\r\n          location: {\r\n            anchors: {\r\n              anchor1X:\r\n                target.summary.location.anchors.anchor1X -\r\n                (targetUnitVector.x * summary.capacity.propulsion.orbitRange) /\r\n                  10, // Currently 1px = 10m\r\n              anchor1Y:\r\n                target.summary.location.anchors.anchor1Y -\r\n                (targetUnitVector.y * summary.capacity.propulsion.orbitRange) /\r\n                  10,\r\n            },\r\n            vector: droneVector,\r\n          },\r\n        },\r\n      };\r\n      return (\r\n        EveMath.getTurretAcurracy(summary, droneLocation, target) *\r\n        droneAccuracyModifier\r\n      );\r\n    } else {\r\n      const absoluteVelocity =\r\n        summary.capacity.propulsion.orbitVelocity + targetVelocity;\r\n      const droneVector = {\r\n        x: targetUnitVector.x * (absoluteVelocity / 3), // Currently 1px = 3m/s\r\n        y: targetUnitVector.y * (absoluteVelocity / 3),\r\n      }; // drone positions at perpendicular to targetVector\r\n      const droneLocation = {\r\n        summary: {\r\n          location: {\r\n            anchors: {\r\n              anchor1X:\r\n                target.summary.location.anchors.anchor1X +\r\n                (targetUnitVector.y * summary.capacity.propulsion.orbitRange) /\r\n                  10, // Currently 1px = 10m\r\n              anchor1Y:\r\n                target.summary.location.anchors.anchor1Y -\r\n                (targetUnitVector.x * summary.capacity.propulsion.orbitRange) /\r\n                  10,\r\n            },\r\n            vector: droneVector,\r\n          },\r\n        },\r\n      };\r\n      return EveMath.getTurretAcurracy(summary, droneLocation, target);\r\n    }\r\n  }\r\n  static #getDroneAccracy_getAccuracyModifier = (summary, targetVelocity) => {\r\n    // Estimated modifier - drone movement is too complicated simplify the location when target velocity is higher than orbit velocity\r\n    //prettier-ignore\r\n    const value = 1 -targetVelocity /\r\n          (summary.capacity.propulsion.maximumVelocity - summary.capacity.propulsion.orbitVelocity);\r\n    if (value >= 1) return 1;\r\n    return value >= 0 ? value : 0.01;\r\n  };\r\n  static getLauncherDamageModifier(summary, target) {\r\n    const signatureRadius = target.summary.capacity.misc.signatureRadius;\r\n    const explosionRadius = summary.range.explosionRadius;\r\n    const explosionVelocity = summary.range.explosionVelocity;\r\n    const damageReductionFactor = summary.range.damageReductionFactor;\r\n    const targetVelocity =\r\n      Math.sqrt(\r\n        Math.pow(target.summary.location.vector.x, 2) +\r\n          Math.pow(target.summary.location.vector.y, 2)\r\n      ) * 3;\r\n\r\n    const simplePart = signatureRadius / explosionRadius;\r\n    const complexPart = Math.pow(\r\n      (signatureRadius * explosionVelocity) /\r\n        (explosionRadius * targetVelocity),\r\n      damageReductionFactor\r\n    );\r\n\r\n    return Math.min(1, simplePart, complexPart);\r\n  }\r\n  static getTurretRandomDamageModifier() {\r\n    const randomDamageModifier = Math.random();\r\n    return randomDamageModifier < 0.01 ? 3 : randomDamageModifier + 0.49;\r\n  }\r\n  static getRangeModifier(summary, owner, target) {\r\n    const distanceVector = {\r\n      x:\r\n        target.summary.location.anchors.anchor1X -\r\n        owner.summary.location.anchors.anchor1X,\r\n      y:\r\n        target.summary.location.anchors.anchor1Y -\r\n        owner.summary.location.anchors.anchor1Y,\r\n    };\r\n    const distance =\r\n      Math.sqrt(Math.pow(distanceVector.x, 2) + Math.pow(distanceVector.y, 2)) /\r\n      100;\r\n\r\n    const optimal = summary.range.optimalRange;\r\n    const falloff = summary.range.falloffRange;\r\n    if (distance * 1000 > optimal + 3 * falloff) return 0;\r\n\r\n    const denominator = falloff;\r\n    const numerator = Math.max(0, distance * 1000 - optimal);\r\n    const _distancePart = Math.pow(numerator / denominator, 2);\r\n\r\n    return Math.pow(0.5, _distancePart);\r\n  }\r\n\r\n  static #getTurretAcurracy_trackingPart = (\r\n    angularVelocity,\r\n    trackingValue,\r\n    signatureRadius\r\n  ) => {\r\n    const denominator = trackingValue * signatureRadius;\r\n    const numerator = angularVelocity * 40000;\r\n    return Math.pow(numerator / denominator, 2);\r\n  };\r\n  static #getTurretAcurracy_distancePart = (optimal, fallOff, distance) => {\r\n    const denominator = fallOff;\r\n    const numerator = Math.max(0, distance * 1000 - optimal);\r\n    return Math.pow(numerator / denominator, 2);\r\n  };\r\n  static #getTurretAcurracy_angularVelocuty = (\r\n    distance,\r\n    distanceVector,\r\n    onBoardVector,\r\n    hostileVector\r\n  ) => {\r\n    if (\r\n      EveMath.#getTurretAcurracy_validateVector(distanceVector) &&\r\n      EveMath.#getTurretAcurracy_validateVector(onBoardVector) &&\r\n      EveMath.#getTurretAcurracy_validateVector(hostileVector)\r\n    ) {\r\n      const perpendicularVector = { x: -distanceVector.y, y: distanceVector.x };\r\n      const perpendicularUnitVector =\r\n        EveMath.#common_makeUnitVector(perpendicularVector);\r\n      const hostileOrbitalVelocity = EveMath.#getTurretAcurracy_innerProduct(\r\n        perpendicularUnitVector,\r\n        hostileVector\r\n      );\r\n      const onBoardOrbitalVelocity = EveMath.#getTurretAcurracy_innerProduct(\r\n        perpendicularUnitVector,\r\n        onBoardVector\r\n      );\r\n      const trueObitalVelocity =\r\n        (hostileOrbitalVelocity - onBoardOrbitalVelocity) * 3;\r\n      return trueObitalVelocity / (distance * 1000);\r\n    } else return false;\r\n  };\r\n  static #getTurretAcurracy_innerProduct = (unitVector, velocityVector) => {\r\n    return unitVector.x * velocityVector.x + unitVector.y * velocityVector.y;\r\n  };\r\n  static #getTurretAcurracy_validateVector = (vector) => {\r\n    if (vector.x !== undefined && vector.y !== undefined) return true;\r\n    else return false;\r\n  };\r\n  static #common_makeUnitVector = (vector) => {\r\n    const length = Math.sqrt(Math.pow(vector.x, 2) + Math.pow(vector.y, 2));\r\n    return { x: vector.x / length, y: vector.y / length };\r\n  };\r\n}\r\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"@babel/runtime/helpers/esm/setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport isNativeReflectConstruct from \"@babel/runtime/helpers/esm/isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export function findAttributesByName(item, attributeName) {\r\n  if (!item || !item.typeAttributesStats) return undefined;\r\n\r\n  if (attributeName.constructor === String) {\r\n    return findAttributeByName(item, attributeName);\r\n  } else if (attributeName.constructor === Array) {\r\n    const attributes = attributeName.map((entry) =>\r\n      findAttributeByName(item, entry)\r\n    );\r\n\r\n    if (attributes.length === 0) return undefined;\r\n    return attributes;\r\n  }\r\n}\r\n\r\nfunction findAttributeByName(item, attributeName) {\r\n  if (!item || !item.typeAttributesStats) return undefined;\r\n\r\n  if (item.typeAttributesStats.constructor !== Array) return undefined;\r\n\r\n  const result = item.typeAttributesStats.filter(\r\n    (entry) => entry.attributeName === attributeName\r\n  );\r\n\r\n  if (result.length === 1) return result[0].value;\r\n  if (result.length >= 2) return result.map((entry) => entry.value);\r\n  else return undefined;\r\n}\r\n\r\nexport function findAttributesbyID(item, attributeID) {\r\n  if (!item || !item.typeAttributesStats) return undefined;\r\n\r\n  if (attributeID.constructor === Number) {\r\n    return findAttributebyID(item, attributeID);\r\n  } else if (attributeID.constructor === Array) {\r\n    const attributes = attributeID.map((entry) =>\r\n      findAttributebyID(item, entry)\r\n    );\r\n\r\n    if (attributes.length === 0) return undefined;\r\n    return attributes;\r\n  }\r\n}\r\n\r\nexport function findAttributebyID(item, attributeID) {\r\n  if (!item || !item.typeAttributesStats) return undefined;\r\n\r\n  if (item.typeAttributesStats.constructor !== Array) return undefined;\r\n\r\n  const result = item.typeAttributesStats.filter(\r\n    (entry) => entry.attributeID === attributeID\r\n  );\r\n\r\n  if (result.length === 1) return result[0].value;\r\n  else if (result.length >= 2) return result.map((entry) => entry.value);\r\n  else return undefined;\r\n}\r\n","import { findAttributebyID } from \"../../../../services/dataManipulation/findAttributes\";\r\nimport Fit from \"../../../../fitter/src/Fit\";\r\n\r\nexport default class Stat {\r\n  static defaultStat = {\r\n    damage: {\r\n      turretLauncherDamage: { max: 0, effective: 0, alpha: 0 },\r\n      turretLauncherRange: [],\r\n      droneDamage: { max: 0, effective: 0, alpha: 0 },\r\n    },\r\n    defense: {\r\n      resistance: {\r\n        armor: { HP: 0, EM: 0, TH: 0, KI: 0, EX: 0 },\r\n        shield: { HP: 0, EM: 0, TH: 0, KI: 0, EX: 0 },\r\n        structure: { HP: 0, EM: 0, TH: 0, KI: 0, EX: 0 },\r\n      },\r\n      active: {\r\n        shieldBonus: 0,\r\n        armorBonus: 0,\r\n        structureBonus: 0,\r\n      },\r\n    },\r\n    capacitor: {\r\n      ambientChargeRate: 0,\r\n      boosterChargeRate: 0,\r\n      activationUseRate: 0,\r\n      stableLevel: 0,\r\n    },\r\n    resource: {\r\n      capacity: {\r\n        turret: 0,\r\n        launcher: 0,\r\n        calibration: 0,\r\n        droneBandwidth: 0,\r\n        droneBay: 0,\r\n        droneActive: 5,\r\n      },\r\n      load: {\r\n        turret: 0,\r\n        launcher: 0,\r\n        calibration: 0,\r\n        droneBandwidth: 0,\r\n        droneBay: 0,\r\n        droneActive: 0,\r\n      },\r\n    },\r\n    engineering: {\r\n      pg: { load: 0, output: 0 },\r\n      cpu: { load: 0, output: 0 },\r\n    },\r\n    miscellaneous: {\r\n      sensor: {\r\n        scanResolution: 0,\r\n        maximumLockedTarget: 0,\r\n        maximumTargetingRange: 0,\r\n        strength: {\r\n          gravimetric: 0,\r\n          magnetometric: 0,\r\n          ladar: 0,\r\n          radar: 0,\r\n        },\r\n      },\r\n      propulsion: {\r\n        inertialModifier: 0,\r\n        maximumVelocity: 0,\r\n        warpSpeedMultiplier: 0,\r\n      },\r\n      misc: {\r\n        cargoBayCapacity: 0,\r\n        signatureRadius: 0,\r\n      },\r\n    },\r\n  };\r\n  static stat(fit) {\r\n    const propCapacitor = Stat.capacitor(fit);\r\n\r\n    return {\r\n      damage: Stat.damage(fit),\r\n      defense: Stat.defense(fit),\r\n      capacitor: {\r\n        ...propCapacitor,\r\n        stableLevel: Stat.capacitor_stableLevel(fit, propCapacitor),\r\n      },\r\n      engineering: Stat.engineering(fit),\r\n      resource: Stat.resource(fit),\r\n      miscellaneous: Stat.miscellaneous(fit),\r\n    };\r\n  }\r\n\r\n  static damage(fit) {\r\n    if (!fit.highSlots)\r\n      return {\r\n        turretLauncherDamage: { max: 0, effective: 0, alpha: 0 },\r\n        turretLauncherRange: [],\r\n        droneDamage: { max: 0, effective: 0, alpha: 0 },\r\n      };\r\n\r\n    const turrets = Stat.#damage_turrets(fit);\r\n    const launchers = Stat.#damage_launchers(fit);\r\n    const drones = Stat.#damage_drones(fit);\r\n\r\n    const turretLauncherDamageSlots = [...turrets, ...launchers];\r\n    const turretLauncherDamageSummaries = turretLauncherDamageSlots.map(\r\n      (slot) => {\r\n        return Stat.damage_getSummary(slot.item, slot.charge);\r\n      }\r\n    );\r\n    const turretLauncherDamage = turretLauncherDamageSummaries.reduce(\r\n      (acc, summary) => {\r\n        const alpha = summary.damagePerAct.alpha;\r\n        const maxDps = alpha / summary.activationInfo.duration || 0;\r\n        const effectiveDps = alpha / summary.activationInfo.e_duration || 0;\r\n\r\n        return {\r\n          max: acc.max + maxDps,\r\n          effective: acc.effective + effectiveDps,\r\n          alpha: acc.alpha + alpha,\r\n        };\r\n      },\r\n      { max: 0, effective: 0, alpha: 0 }\r\n    );\r\n\r\n    const turretLauncherRange = turretLauncherDamageSummaries.reduce(\r\n      (acc, summary) => {\r\n        const optimalRange = summary.range.optimalRange;\r\n        const falloffRange = summary.range.falloffRange;\r\n\r\n        const overlappingRange = acc.find(\r\n          (range) =>\r\n            range.optimalRange === optimalRange &&\r\n            range.falloffRange === falloffRange\r\n        );\r\n        if (!!overlappingRange) overlappingRange.debug.push(summary.slot);\r\n        else acc.push({ optimalRange, falloffRange, debug: [summary.slot] });\r\n        return acc;\r\n      },\r\n      []\r\n    );\r\n\r\n    const droneSummaries = drones.map((drone) => {\r\n      return Stat.damage_getSummary(drone.item, drone.item);\r\n    });\r\n    const droneDamage = droneSummaries.reduce(\r\n      (acc, summary) => {\r\n        const typeCount = summary.typeCount;\r\n        const alpha = summary.damagePerAct.alpha;\r\n        const maxDps = alpha / summary.activationInfo.duration || 0;\r\n        const effectiveDps = alpha / summary.activationInfo.e_duration || 0;\r\n        return {\r\n          max: acc.max + maxDps * typeCount,\r\n          effective: acc.effective + effectiveDps,\r\n          alpha: acc.alpha + alpha,\r\n        };\r\n      },\r\n      { max: 0, effective: 0, alpha: 0 }\r\n    );\r\n\r\n    const damageSummaries = [\r\n      ...turretLauncherDamageSummaries,\r\n      ...droneSummaries,\r\n    ];\r\n\r\n    return {\r\n      turretLauncherDamage,\r\n      turretLauncherRange,\r\n      droneDamage,\r\n      damageSummaries,\r\n    };\r\n  }\r\n  static #damage_turrets = (fit) => {\r\n    return Fit.mapSlots(\r\n      fit,\r\n      (slot) => {\r\n        const isTurretFitted = !!slot?.item?.typeEffectsStats?.find(\r\n          (efft) => efft.effectID === 42\r\n        ); //effectID: 42, effectName: \"turretFitted\"\r\n        const isActivated = slot.item.typeState === \"activation\";\r\n        if (isTurretFitted && Fit.validateChargeSlot(slot) && isActivated)\r\n          return slot;\r\n        else return undefined;\r\n      },\r\n      { isIterate: { highSlots: true } }\r\n    ).filter((slot) => !!slot);\r\n  };\r\n  static #damage_launchers = (fit) => {\r\n    return Fit.mapSlots(\r\n      fit,\r\n      (slot) => {\r\n        const isLauncherFitted = !!slot?.item?.typeEffectsStats?.find(\r\n          (efft) => efft.effectID === 40\r\n        ); //effectID: 40, effectName: \"launcherFitted\"\r\n        const isActivated = slot.item.typeState === \"activation\";\r\n        if (isLauncherFitted && Fit.validateChargeSlot(slot) && isActivated)\r\n          return slot;\r\n        else return undefined;\r\n      },\r\n      { isIterate: { highSlots: true } }\r\n    ).filter((slot) => !!slot);\r\n  };\r\n  static #damage_drones = (fit) => {\r\n    return Fit.mapSlots(\r\n      fit,\r\n      (slot) => {\r\n        const isActivated = slot.item.typeState === \"activation\";\r\n        if (isActivated) return slot;\r\n        else return undefined;\r\n      },\r\n      { isIterate: { droneSlots: true } }\r\n    ).filter((slot) => !!slot);\r\n  };\r\n  static damage_getSummary = (item, charge) => {\r\n    if (!item) return false;\r\n\r\n    const damagePerAct = Stat.damage_damagePerAct(item, charge);\r\n    const activationInfo = Stat.getActivationInfo(item, charge);\r\n    const range = Stat.damage_range(item, charge);\r\n    const typeCount = item.typeCount;\r\n    const slot = { item, charge };\r\n\r\n    return { activationInfo, damagePerAct, range, typeCount, slot };\r\n  };\r\n  static damage_damagePerAct = (item, charge) => {\r\n    const damageModifier = findAttributebyID(item, 64) || 1; //attributeID: 64, attributeName: \"Damage Modifier\"\r\n\r\n    const EM_damage = findAttributebyID(charge, 114); //attributeID: 114, attributeName: \"EM damage\"\r\n    const TH_damage = findAttributebyID(charge, 118); //attributeID: 118, attributeName: \"Thermal damage\"\r\n    const KI_damage = findAttributebyID(charge, 117); //attributeID: 117, attributeName: \"Kinetic damage\"\r\n    const EX_damage = findAttributebyID(charge, 116); //attributeID: 116, attributeName: \"Explosive damage\"\r\n    const mergedDamage = EM_damage + TH_damage + KI_damage + EX_damage;\r\n\r\n    const alpha = damageModifier * mergedDamage;\r\n\r\n    return {\r\n      alpha,\r\n      EM: EM_damage * damageModifier,\r\n      TH: TH_damage * damageModifier,\r\n      KI: KI_damage * damageModifier,\r\n      EX: EX_damage * damageModifier,\r\n    };\r\n  };\r\n  static damage_range = (item, charge) => {\r\n    const isTurretFitted = !!item?.typeEffectsStats?.find(\r\n      (efft) => efft.effectID === 42\r\n    ); //effectID: 42, effectName: \"turretFitted\"\r\n    const isLauncherFitted = !!item?.typeEffectsStats?.find(\r\n      (efft) => efft.effectID === 40\r\n    ); //effectID: 40, effectName: \"launcherFitted\"\r\n    const isDrone = item?.typeDroneSize !== undefined;\r\n\r\n    if (isTurretFitted || isDrone) {\r\n      const optimalRange = findAttributebyID(item, 54); //attributeID: 54, attributeName: \"Optimal Range\"\r\n      const falloffRange = findAttributebyID(item, 158); //attributeID: 158, attributeName: \"Accuracy falloff \"\r\n      const tracking = findAttributebyID(item, 160); // attributeID: 160, attributeName: \"Turret Tracking\"\r\n      const signatureResolution = findAttributebyID(item, 620); // attributeID: 620, attributeName: \"Signature Resolution\"\r\n\r\n      return { optimalRange, falloffRange, tracking, signatureResolution };\r\n    } else if (isLauncherFitted) {\r\n      const maximumVelocity = findAttributebyID(charge, 37); //attributeID: 37, attributeName: \"Maximum Velocity\"\r\n      const filghtTime = findAttributebyID(charge, 281); //attributeID: 281, attributeName: \"Maximum Flight Time\"\r\n      const optimalRange = maximumVelocity * (filghtTime / 1000);\r\n      const explosionVelocity = findAttributebyID(charge, 653); // attributeID: 653, attributeName: \"Explosion Velocity\"\r\n      const explosionRadius = findAttributebyID(charge, 654); // attributeID: 654, attributeName: \"Explosion Radius\"\r\n      const damageReductionFactor = findAttributebyID(charge, 1353); // attributeID: 1353, attributeName: \"aoeDamageReductionFactor\"\r\n\r\n      //prettier-ignore\r\n      return { optimalRange, falloffRange: 0, explosionVelocity, explosionRadius, damageReductionFactor };\r\n    } else return { optimalRange: 0, falloffRange: 0 };\r\n  };\r\n\r\n  static capacitor(fit) {\r\n    if (!fit)\r\n      return {\r\n        ambientChargeRate: 0,\r\n        boosterChargeRate: 0,\r\n        activationUseRate: 0,\r\n      };\r\n    const debug = [];\r\n    const slots = Fit.mapSlots(fit, (slot) => slot, {\r\n      isIterate: {\r\n        highSlots: true,\r\n        midSlots: true,\r\n        lowSlots: true,\r\n      },\r\n    });\r\n    const activationUseRate = slots.reduce((acc, slot) => {\r\n      const cus = Stat.#capacitor_getUseRate(slot);\r\n      if (cus > 0)\r\n        debug.push({\r\n          typeName: slot.item.typeName,\r\n          capacitorUsePerSec: cus,\r\n          dominID: slot.item.domainID,\r\n        });\r\n      return acc + cus;\r\n    }, 0);\r\n    const ambientChargeRate = Stat.#capacitor_getAmbientChargeRate(fit, 25);\r\n    const boosterChargeRate = Stat.#capacitor_getBoosterChargeRate(fit);\r\n    debug.push({ activationUseRate, ambientChargeRate, boosterChargeRate });\r\n\r\n    /* console.log(debug) */\r\n    return { ambientChargeRate, boosterChargeRate, activationUseRate };\r\n  }\r\n  static capacitor_stableLevel(fit, propCapacitor = false) {\r\n    if (!fit.ship?.typeID) return 0;\r\n    const capacitor = !!propCapacitor ? propCapacitor : Stat.capacitor(fit);\r\n    const Cmax = findAttributebyID(fit.ship, 482); //attributeID: 482, attributeName: \"Capacitor Capacity\"\r\n    const Tnow = findAttributebyID(fit.ship, 55) / 1000; //attributeID: 55, attributeName: \"Capacitor Recharge time\"\r\n\r\n    const capacitorDeltas = [];\r\n    for (let i = 200; i < 1000 + 1; i++) {\r\n      const Cnow = Cmax * (i / 1000);\r\n      capacitorDeltas.push({\r\n        capacitorLevel: i / 10,\r\n        delta:\r\n          Stat.getAmbientChargeRateMath(Cmax, Cnow, Tnow) +\r\n          capacitor.boosterChargeRate -\r\n          capacitor.activationUseRate,\r\n      });\r\n    }\r\n    const positiveDeltas = capacitorDeltas\r\n      .sort((a, b) => a.delta - b.delta)\r\n      .filter((capacitorDelta) => capacitorDelta.delta >= 0);\r\n\r\n    if (positiveDeltas[0] === undefined) return 0;\r\n    else return positiveDeltas[0].capacitorLevel;\r\n  }\r\n  static #capacitor_getUseRate = (slot) => {\r\n    if (slot.item.typeState !== \"activation\") return 0;\r\n\r\n    const activationCost = findAttributebyID(slot.item, 6); // attributeID: 6, attributeName: \"Activation Cost\"\r\n    if (activationCost === undefined) return 0;\r\n\r\n    const activationInfo = Stat.getActivationInfo(slot.item, slot.charge);\r\n\r\n    return activationCost / activationInfo.e_duration;\r\n  };\r\n  static #capacitor_getAmbientChargeRate = (fit, capacitorLevel) => {\r\n    const chargeInfo = Stat.capacitor_getChargeInfo(fit);\r\n    const Cmax = chargeInfo.HP;\r\n    const Tchg = chargeInfo.bonusRate;\r\n    const Cnow = (Cmax * capacitorLevel) / 100;\r\n\r\n    return Stat.getAmbientChargeRateMath(Cmax, Cnow, Tchg);\r\n  };\r\n  static capacitor_getChargeInfo = (fit) => {\r\n    const HP = findAttributebyID(fit.ship, 482) || 0; //attributeID: 482, attributeName: \"Capacitor Capacity\"\r\n    const bonusRate = findAttributebyID(fit.ship, 55) / 1000 || 0; //attributeID: 55, attributeName: \"Capacitor Recharge time\"\r\n\r\n    return { HP, bonusRate };\r\n  };\r\n  static #capacitor_getBoosterChargeRate = (fit) => {\r\n    const slots = Fit.mapSlots(fit, (slot) => slot, {\r\n      isIterate: { midSlots: true },\r\n    });\r\n    const boosterSlots = slots.filter((slot) => {\r\n      if (!slot?.item?.typeEffectsStats) return false;\r\n      return slot.item.typeEffectsStats.find((efft) => efft.effectID === 48); // effectID: 48, effectName: \"powerBooster\"\r\n    });\r\n\r\n    return boosterSlots.reduce((acc, boosterSlot) => {\r\n      //prettier-ignore\r\n      const activationInfo = Stat.getActivationInfo(boosterSlot.item, boosterSlot.charge);\r\n      //prettier-ignore\r\n      const capacitorBonus = Stat.capacitor_getBonusPerAct_self(boosterSlot.item, boosterSlot.charge);\r\n      const boostChargeRate = capacitorBonus / activationInfo.e_duration || 0;\r\n\r\n      return acc + boostChargeRate;\r\n    }, 0);\r\n  };\r\n  static capacitor_getBonusPerAct_self(item, charge) {\r\n    if (!item || !charge) return { capacitorBonus: 0 };\r\n\r\n    const bonusPerAct = findAttributebyID(charge, 67); //attributeID: 67, attributeName: \"Capacitor Bonus\"\r\n\r\n    return bonusPerAct;\r\n  }\r\n\r\n  static defense(fit) {\r\n    if (!fit || !fit.ship)\r\n      return {\r\n        resistance: {\r\n          armor: { HP: 0, EM: 0, TH: 0, KI: 0, EX: 0 },\r\n          shield: { HP: 0, EM: 0, TH: 0, KI: 0, EX: 0 },\r\n          structure: { HP: 0, EM: 0, TH: 0, KI: 0, EX: 0 },\r\n        },\r\n        active: {\r\n          shieldBonus: 0,\r\n          armorBonus: 0,\r\n          structureBonus: 0,\r\n        },\r\n      };\r\n    return {\r\n      resistance: Stat.defense_resistance(fit),\r\n      active: Stat.#defense_active(fit),\r\n    };\r\n  }\r\n  static defense_resistance = (fit) => {\r\n    if (!fit.ship || !fit.ship.typeAttributesStats)\r\n      return {\r\n        armor: { HP: 0, EM: 0, TH: 0, KI: 0, EX: 0 },\r\n        shield: { HP: 0, EM: 0, TH: 0, KI: 0, EX: 0 },\r\n        structure: { HP: 0, EM: 0, TH: 0, KI: 0, EX: 0 },\r\n      };\r\n\r\n    const shipAttrs = fit.ship.typeAttributesStats;\r\n\r\n    const armorHP = shipAttrs.find((attr) => attr.attributeID === 265);\r\n    const armorEM = shipAttrs.find((attr) => attr.attributeID === 267);\r\n    const armorTH = shipAttrs.find((attr) => attr.attributeID === 270);\r\n    const armorKI = shipAttrs.find((attr) => attr.attributeID === 269);\r\n    const armorEX = shipAttrs.find((attr) => attr.attributeID === 268);\r\n\r\n    const shieldHP = shipAttrs.find((attr) => attr.attributeID === 263);\r\n    const shieldEM = shipAttrs.find((attr) => attr.attributeID === 271);\r\n    const shieldTH = shipAttrs.find((attr) => attr.attributeID === 274);\r\n    const shieldKI = shipAttrs.find((attr) => attr.attributeID === 273);\r\n    const shieldEX = shipAttrs.find((attr) => attr.attributeID === 272);\r\n    const shieldChargeRate =\r\n      shipAttrs.find((attr) => attr.attributeID === 479).value / 1000 || 0; // attributeID: 479, attributeName: \"Shield recharge time\"\r\n\r\n    const structureHP = shipAttrs.find((attr) => attr.attributeID === 9);\r\n    const structureEM = shipAttrs.find((attr) => attr.attributeID === 113);\r\n    const structureTH = shipAttrs.find((attr) => attr.attributeID === 110);\r\n    const structureKI = shipAttrs.find((attr) => attr.attributeID === 109);\r\n    const structureEX = shipAttrs.find((attr) => attr.attributeID === 111);\r\n\r\n    return {\r\n      armor: {\r\n        HP: armorHP.value,\r\n        EM: Stat.#defense_resistance_decimal_fix(armorEM),\r\n        TH: Stat.#defense_resistance_decimal_fix(armorTH),\r\n        KI: Stat.#defense_resistance_decimal_fix(armorKI),\r\n        EX: Stat.#defense_resistance_decimal_fix(armorEX),\r\n      },\r\n      shield: {\r\n        HP: shieldHP.value,\r\n        EM: Stat.#defense_resistance_decimal_fix(shieldEM),\r\n        TH: Stat.#defense_resistance_decimal_fix(shieldTH),\r\n        KI: Stat.#defense_resistance_decimal_fix(shieldKI),\r\n        EX: Stat.#defense_resistance_decimal_fix(shieldEX),\r\n        bonusRate: shieldChargeRate,\r\n      },\r\n      structure: {\r\n        HP: structureHP.value,\r\n        EM: Stat.#defense_resistance_decimal_fix(structureEM),\r\n        TH: Stat.#defense_resistance_decimal_fix(structureTH),\r\n        KI: Stat.#defense_resistance_decimal_fix(structureKI),\r\n        EX: Stat.#defense_resistance_decimal_fix(structureEX),\r\n      },\r\n    };\r\n  };\r\n  static #defense_resistance_decimal_fix = (attr) => {\r\n    const value = 100 - attr.value * 100;\r\n    return value > 0 ? value : 0;\r\n  };\r\n  static defense_getSummary = (item, charge) => {\r\n    if (!item) return false;\r\n\r\n    const activationInfo = Stat.getActivationInfo(item, charge);\r\n    const bonusPerAct = Stat.defense_getBonusPerAct(item, charge);\r\n    const slot = { item, charge };\r\n\r\n    return { activationInfo, bonusPerAct, slot };\r\n  };\r\n  static defense_getBonusPerAct = (item, charge) => {\r\n    if (!item) return { shieldBonus: 0, armorBonus: 0, structureBonus: 0 };\r\n\r\n    const shield = findAttributebyID(item, 68) || 0; //attributeID: 68, attributeName: \"Shield Bonus\"\r\n    const armor = findAttributebyID(item, 84) || 0; //attributeID: 84, attributeName: \"Armor Hitpoints Repaired\"\r\n    const structure = findAttributebyID(item, 83) || 0; //attributeID: 83, attributeName: \"Structure Hitpoints Repaired\"\r\n\r\n    return { shield, armor, structure };\r\n  };\r\n  static #defense_active = (fit) => {\r\n    const active = {\r\n      shieldBonus: 0,\r\n      armorBonus: 0,\r\n      structureBonus: 0,\r\n    };\r\n    if (!fit.ship || !fit.ship.typeAttributesStats) return active;\r\n\r\n    Fit.mapSlots(\r\n      fit,\r\n      (slot) => {\r\n        if (!slot.item.typeAttributesStats) return;\r\n        const activationTime = findAttributebyID(slot.item, 73); //attributeID: 73, attributeName: \"Activation time / duration\"\r\n\r\n        const shieldBonus = findAttributebyID(slot.item, 68); //attributeID: 68, attributeName: \"Shield Bonus\"\r\n        if (!!shieldBonus) {\r\n          active.shieldBonus += (shieldBonus / activationTime) * 1000;\r\n          return;\r\n        }\r\n        const armorBonus = findAttributebyID(slot.item, 84); //attributeID: 84, attributeName: \"Armor Hitpoints Repaired\"\r\n        if (!!armorBonus) {\r\n          active.armorBonus += (armorBonus / activationTime) * 1000;\r\n          return;\r\n        }\r\n        const structureBonus = findAttributebyID(slot.item, 83); //attributeID: 83, attributeName: \"Structure Hitpoints Repaired\"\r\n        if (!!structureBonus) {\r\n          active.structureBonus += (structureBonus / activationTime) * 1000;\r\n          return;\r\n        }\r\n      },\r\n      {\r\n        isIterate: { midSlots: true, lowSlots: true },\r\n      }\r\n    );\r\n    return active;\r\n  };\r\n\r\n  static engineering(fit) {\r\n    if (!fit.ship?.typeID)\r\n      return {\r\n        pg: { load: 0, output: 0 },\r\n        cpu: { load: 0, output: 0 },\r\n      };\r\n\r\n    const pgLoad = findAttributebyID(fit.ship, 15); // attributeID: 15, attributeName: \"Power Load\"\r\n    const pgOutput = findAttributebyID(fit.ship, 11); //attributeID: 11, attributeName: \"Powergrid Output\"\r\n    const cpuLoad = findAttributebyID(fit.ship, 49); // attributeID: 49, attributeName: \"CPU Load\"\r\n    const cpuOutput = findAttributebyID(fit.ship, 48); //attributeID: 48, attributeName: \"CPU Output\"\r\n\r\n    return {\r\n      pg: { load: Number(pgLoad.toFixed(1)), output: pgOutput },\r\n      cpu: { load: Number(cpuLoad.toFixed(1)), output: cpuOutput },\r\n    };\r\n  }\r\n\r\n  static resource(fit) {\r\n    if (!fit.ship || !fit.ship.typeAttributesStats)\r\n      return {\r\n        capacity: {\r\n          turret: 0,\r\n          launcher: 0,\r\n          calibration: 0,\r\n          droneBandwidth: 0,\r\n          droneBay: 0,\r\n          droneActive: 5,\r\n        },\r\n        load: {\r\n          turret: 0,\r\n          launcher: 0,\r\n          calibration: 0,\r\n          droneBandwidth: 0,\r\n          droneBay: 0,\r\n          droneActive: 0,\r\n        },\r\n      };\r\n\r\n    const turretHardpoint = findAttributebyID(fit.ship, 102); //attributeID: 102, attributeName: \"Turret Hardpoints\"\r\n    const launcherHardpoint = findAttributebyID(fit.ship, 101); //attributeID: 101, attributeName: \"Launcher Hardpoints\";\r\n    const calibration = findAttributebyID(fit.ship, 1132); //attributeID: 1132, attributeName: \"Calibration\"\r\n    const droneCapacity = findAttributebyID(fit.ship, 283); //attributeID: 283, attributeName: \"Drone Capacity\"\r\n    const droneBandwidth = findAttributebyID(fit.ship, 1271); //ttributeID: 1271, attributeName: \"Drone Bandwidth\"\r\n\r\n    const mountedTurrets = fit.highSlots.reduce((acc, slot) => {\r\n      const isTurretFitted = !!slot?.item?.typeEffectsStats?.find(\r\n        (efft) => efft.effectID === 42\r\n      ); //effectID: 42, effectName: \"turretFitted\"\r\n      return isTurretFitted && slot.item.typeState !== \"offline\" ? ++acc : acc;\r\n    }, 0);\r\n    const mountedLaunchers = fit.highSlots.reduce((acc, slot) => {\r\n      const isLauncherFitted = !!slot?.item?.typeEffectsStats?.find(\r\n        (efft) => efft.effectID === 40\r\n      ); //effectID: 40, effectName: \"launcherFitted\"\r\n      return isLauncherFitted && slot.item.typeState !== \"offline\"\r\n        ? ++acc\r\n        : acc;\r\n    }, 0);\r\n    const mountedCalibration = fit.rigSlots.reduce((acc, slot) => {\r\n      const calibration = findAttributebyID(slot.item, 1153); //attributeID: 1153, attributeName: \"Calibration cost\"\r\n      return !!calibration && slot.item.typeState !== \"offline\"\r\n        ? acc + calibration\r\n        : acc;\r\n    }, 0);\r\n    const mountedDroneBandwidth = fit.droneSlots.reduce((acc, slot) => {\r\n      const droneBandwidth = findAttributebyID(slot.item, 1272); //attributeID: 1272, attributeName: \"Bandwidth Needed\"\r\n      return !!droneBandwidth && slot.item.typeState === \"activation\"\r\n        ? acc + droneBandwidth * slot.item.typeCount\r\n        : acc;\r\n    }, 0);\r\n    const mountedDronebay = fit.droneSlots.reduce((acc, slot) => {\r\n      const droneVolume = slot.item.volume;\r\n      return !!droneVolume && slot.item.typeState !== \"offline\"\r\n        ? acc + droneVolume * slot.item.typeCount\r\n        : acc;\r\n    }, 0);\r\n    const droneActive = fit.droneSlots.reduce((acc, slot) => {\r\n      if (slot.item.typeState === \"activation\")\r\n        return acc + (slot.item.typeCount || 0);\r\n      return acc;\r\n    }, 0);\r\n\r\n    return {\r\n      capacity: {\r\n        turret: turretHardpoint,\r\n        launcher: launcherHardpoint,\r\n        calibration: calibration,\r\n        droneBay: droneCapacity,\r\n        droneBandwidth: droneBandwidth,\r\n        droneActive: 5,\r\n      },\r\n      load: {\r\n        turret: mountedTurrets,\r\n        launcher: mountedLaunchers,\r\n        calibration: mountedCalibration,\r\n        droneBay: mountedDronebay,\r\n        droneBandwidth: mountedDroneBandwidth,\r\n        droneActive: droneActive,\r\n      },\r\n    };\r\n  }\r\n\r\n  static miscellaneous(fit) {\r\n    if (!fit?.ship?.typeID)\r\n      return {\r\n        sensor: {\r\n          scanResolution: 0,\r\n          maximumLockedTarget: 0,\r\n          maximumTargetingRange: 0,\r\n          strength: {\r\n            gravimetric: 0,\r\n            magnetometric: 0,\r\n            ladar: 0,\r\n            radar: 0,\r\n          },\r\n        },\r\n        propulsion: {\r\n          inertialModifier: 0,\r\n          maximumVelocity: 0,\r\n          warpSpeedMultiplier: 0,\r\n        },\r\n        misc: {\r\n          cargoBayCapacity: 0,\r\n          signatureRadius: 0,\r\n        },\r\n      };\r\n\r\n    const ship = fit.ship;\r\n\r\n    const scanResolution = findAttributebyID(ship, 564); //attributeID: 564, attributeName: \"Scan Resolution\"\r\n    const signatureRadius = findAttributebyID(ship, 552); //attributeID: 552, attributeName: \"Signature Radius\"\r\n\r\n    const gravimetricSensorStrength = findAttributebyID(ship, 211); //attributeID: 211, attributeName: \"Gravimetric Sensor Strength\"\r\n    const magnetometricSensorStrength = findAttributebyID(ship, 210); //attributeID: 210, attributeName: \"Magnetometric Sensor Strength\"\r\n    const ladarSensorStrength = findAttributebyID(ship, 209); // attributeID: 209, attributeName: \"Ladar Sensor Strength\"\r\n    const radarSensorStrength = findAttributebyID(ship, 208); //attributeID: 208, attributeName: \"RADAR Sensor Strength\"\r\n    const maximumLockedTarget = findAttributebyID(ship, 192); //attributeID: 192, attributeName: \"Maximum Locked Targets\"\r\n    const maximumTargetingRange = findAttributebyID(ship, 76); // attributeID: 76, attributeName: \"Maximum Targeting Range\"\r\n\r\n    const inertialModifier = findAttributebyID(ship, 70); // attributeID: 70, attributeName: \"Inertia Modifier\"\r\n    const maximumVelocity = Stat.#miscellaneous_maximumVelocity(fit);\r\n    const warpSpeedMultiplier = findAttributebyID(ship, 600); //attributeID: 600, attributeName: \"Warp Speed Multiplier\"\r\n\r\n    const cargoBayCapacity = findAttributebyID(ship.capacity);\r\n\r\n    return {\r\n      sensor: {\r\n        scanResolution,\r\n        maximumLockedTarget,\r\n        maximumTargetingRange,\r\n        strength: {\r\n          gravimetric: gravimetricSensorStrength,\r\n          magnetometric: magnetometricSensorStrength,\r\n          ladar: ladarSensorStrength,\r\n          radar: radarSensorStrength,\r\n        },\r\n      },\r\n      propulsion: {\r\n        inertialModifier,\r\n        maximumVelocity,\r\n        warpSpeedMultiplier,\r\n      },\r\n      misc: {\r\n        signatureRadius,\r\n        cargoBayCapacity,\r\n      },\r\n    };\r\n  }\r\n  static #miscellaneous_maximumVelocity = function (fit) {\r\n    const activePropulsionModules = Fit.mapSlots(\r\n      fit,\r\n      (slot) => {\r\n        const isPropulsionModule = !!slot.item?.typeEffectsStats?.find((efft) =>\r\n          [6730, 6731].includes(efft.effectID)\r\n        ); // effectID: 6731, effectName: \"moduleBonusAfterburner\"\r\n        // effectID: 6730, effectName: \"moduleBonusMicrowarpdrive\"\r\n        const isActive = slot.item.typeState === \"activation\";\r\n\r\n        if (isActive && isPropulsionModule) return slot.item;\r\n        else return undefined;\r\n      },\r\n      { isIterate: { midSlots: true } }\r\n    ).filter((slot) => !!slot);\r\n    const shipBaseMaximumVelocity = findAttributebyID(fit.ship, 37); //attributeID: 37, attributeName: \"Maximum Velocity\"\r\n    if (activePropulsionModules.length === 0) return shipBaseMaximumVelocity;\r\n\r\n    //prettier-ignore\r\n    const propModuleMaximumVelocityBonusMul = findAttributebyID( activePropulsionModules[0], 20) / 100 // attributeID: 20, attributeName: \"Maximum Velocity Bonus\"\r\n    const propModuleThrust = findAttributebyID(activePropulsionModules[0], 567); // attributeID: 567, attributeName: \"Thrust\",\r\n\r\n    const propModuleMassAdd = propModuleThrust / 3;\r\n    const shipMass = findAttributebyID(fit.ship, 4); // attributeID: 4, attributeName: \"Mass\";\r\n    const mass =\r\n      Fit.mapSlots(fit, (slot) => slot, {\r\n        isIterate: {\r\n          highSlots: true,\r\n          midSlots: true,\r\n          lowSlots: true,\r\n        },\r\n      }).reduce((acc, slot) => {\r\n        if (!!slot.item.mass) return acc + slot.item.mass;\r\n        return acc;\r\n      }, 0) +\r\n      propModuleMassAdd +\r\n      shipMass;\r\n\r\n    const shipAppliedMaximumVelocity =\r\n      shipBaseMaximumVelocity *\r\n      (1 + (propModuleMaximumVelocityBonusMul * propModuleThrust) / mass);\r\n\r\n    return shipAppliedMaximumVelocity;\r\n  };\r\n\r\n  static getActivationInfo(item, charge) {\r\n    if (!item)\r\n      return {\r\n        duration: Infinity,\r\n        e_duration: Infinity,\r\n        activationLimit: 0,\r\n        reloadTime: 0,\r\n        activationCost: 0,\r\n      };\r\n\r\n    const activationCost = findAttributebyID(item, 6) || 0; //attributeID: 6, attributeName: \"Activation Cost\"\r\n    const reloadTime = (findAttributebyID(item, 1795) || undefined) / 1000; //attributeID: 1795, attributeName: \"Reload Time\"\r\n    const activationTime =\r\n      (findAttributebyID(item, 73) || findAttributebyID(item, 51)) / 1000; // attributeID: 73, attributeName: \"Activation time / duration\" attributeID: 51, attributeName: \"Rate of fire\"\r\n\r\n    if (!reloadTime || !Stat.#getActivationInfo_isTypeNeedCharge(item))\r\n      return {\r\n        duration: activationTime,\r\n        e_duration: activationTime,\r\n        activationLimit: Infinity,\r\n        reloadTime: 0,\r\n        activationCost,\r\n      };\r\n    if (!Fit.validateChargeSlot({ item, charge }))\r\n      return {\r\n        duration: Infinity,\r\n        e_duration: Infinity,\r\n        activationLimit: 0,\r\n        reloadTime: 0,\r\n        activationCost,\r\n      };\r\n\r\n    const itemCapacity = item.capacity;\r\n    const chargeVolume = charge.volume;\r\n    const chargePerCycle = findAttributebyID(item, 56); //attributeID: 56, attributeName: \"Charges Per Cycle\"\r\n\r\n    const chargeVolumePerAct = !!chargePerCycle\r\n      ? chargeVolume * chargePerCycle\r\n      : 0;\r\n    const activationLimit = Math.floor(itemCapacity / chargeVolumePerAct);\r\n    const reloadTimePerAct =\r\n      !!reloadTime && !!itemCapacity && !!chargeVolume\r\n        ? reloadTime / activationLimit\r\n        : 0;\r\n    const EactivationTime = activationTime + reloadTimePerAct;\r\n\r\n    return {\r\n      duration: activationTime,\r\n      e_duration: EactivationTime,\r\n      activationLimit,\r\n      reloadTime,\r\n      activationCost,\r\n    };\r\n  }\r\n  static #getActivationInfo_isTypeNeedCharge = (type) => {\r\n    if (!type || !type.typeEffectsStats) return false;\r\n\r\n    //TODO: Add command burst effectIDs\r\n    //effectID: 42, effectName: \"turretFitted\"\r\n    //effectID: 40, effectName: \"launcherFitted\"\r\n    //effectID: 48, effectName: \"powerBooster\"\r\n    const thisEffectsNeedCharge = [42, 40, 48];\r\n\r\n    return type.typeEffectsStats.reduce((acc, efft) => {\r\n      if (thisEffectsNeedCharge.includes(efft.effectID)) return true;\r\n      return acc;\r\n    }, false);\r\n  };\r\n\r\n  static getAmbientChargeRateMath = (Cmax, Cnow, Tchg) => {\r\n    return ((10 * Cmax) / Tchg) * (Math.sqrt(Cnow / Cmax) - Cnow / Cmax) || 0;\r\n  };\r\n}\r\n","import { findAttributebyID } from \"../../../../services/dataManipulation/findAttributes\";\r\nimport Fit from \"../../../../fitter/src/Fit\";\r\nimport Stat from \"./Stat\";\r\n\r\nconst capPrioritySet = {\r\n  alwaysOn: 0,\r\n  mostTrivial: 10,\r\n  turretDamage: 1,\r\n  shieldHarden: 2,\r\n  shieldBoost: 2,\r\n  shieldBoostAncillaryFueled: 2,\r\n  shieldBoostAncillary: 5,\r\n  armorHardener: 2,\r\n  armorBoost: 2,\r\n  armorBoostAncillaryFueled: 3,\r\n  armorBoostAncillary: 5,\r\n  damageControl: 0,\r\n  structureBoost: 1,\r\n  capacitorNeutralizer: 3,\r\n  capacitorTransmitter: 4,\r\n};\r\n\r\nexport default class Summary extends Stat {\r\n  static updateSummaries = (summarizedSlots, location) => {\r\n    Fit.mapSlots(\r\n      summarizedSlots,\r\n      (slot) => {\r\n        if (!slot.item) return;\r\n        /*  if (slot?.summary?.activationState?.isActive === false) */\r\n        // MUTATION!!\r\n        slot.item.typeState = \"passive\";\r\n        /*  else if (slot?.summary?.activationState?.isActive === true); */\r\n        // MUTATION!!\r\n        /*   slot.item.typeState = \"activation\"; */\r\n      },\r\n      {\r\n        isIterate: {\r\n          highSlots: true,\r\n          midSlots: true,\r\n          lowSlots: true,\r\n          droneSlots: true,\r\n        },\r\n      }\r\n    );\r\n\r\n    const fit = Fit.apply(summarizedSlots);\r\n    const shipSummary = Summary.getSummary_ship(fit, location);\r\n    shipSummary.load = summarizedSlots.summary.load;\r\n\r\n    return summarizedSlots;\r\n  };\r\n\r\n  static getSummaries = (slots, location) => {\r\n    const _slots = Summary.addSummaries_duplicateSlots(slots);\r\n    const blankSlots = {\r\n      highSlots: Array.from(slots.highSlots, () => ({})),\r\n      midSlots: Array.from(slots.midSlots, () => ({})),\r\n      lowSlots: Array.from(slots.lowSlots, () => ({})),\r\n      // Create drone number of blank object array\r\n      droneSlots: slots.droneSlots.reduce((acc, droneSlot) => {\r\n        if (!droneSlot.item) return acc;\r\n        //prettier-ignore\r\n        return [...acc, ...Array.from(new Array(droneSlot.item.typeCount).fill(false),() => ({}))];\r\n      }, []),\r\n    };\r\n\r\n    const fit = Fit.apply(_slots);\r\n    const summaries = Summary.addSummaries(fit, blankSlots, location);\r\n\r\n    return summaries;\r\n  };\r\n  static getSummarizedSlots = (slots, location) => {\r\n    const _slots = Summary.addSummaries_duplicateSlots(slots);\r\n\r\n    const fit = Fit.apply(_slots);\r\n    const summarizedSlots = Summary.addSummaries(fit, _slots, location);\r\n\r\n    return summarizedSlots;\r\n  };\r\n\r\n  static addSummaries = (fit, targetSlots, location) => {\r\n    if (!!fit) targetSlots[\"summary\"] = Summary.getSummary_ship(fit, location);\r\n\r\n    Fit.mapSlots(\r\n      fit,\r\n      (slot) => {\r\n        if (!slot.item) return false;\r\n\r\n        const summary = Summary.#getSummaries_modules(slot);\r\n        summary[\"root\"] = targetSlots;\r\n        const _slot = !!summary && SimFit.toPath(targetSlots, summary.path);\r\n        if (!!_slot) _slot[\"summary\"] = summary;\r\n      },\r\n      {\r\n        isIterate: {\r\n          highSlots: true,\r\n          midSlots: true,\r\n          lowSlots: true,\r\n        },\r\n      }\r\n    );\r\n    Fit.mapSlots(\r\n      fit,\r\n      (slot) => {\r\n        if (!slot.item) return false;\r\n\r\n        const summary = Summary.#getSummaries_drones(slot);\r\n        summary[\"root\"] = targetSlots;\r\n        const _slot = !!summary && SimFit.toPath(targetSlots, summary.path);\r\n        if (!!_slot) _slot[\"summary\"] = summary;\r\n      },\r\n      {\r\n        isIterate: {\r\n          droneSlots: true,\r\n        },\r\n      }\r\n    );\r\n    return targetSlots;\r\n  };\r\n  static addSummaries_duplicateSlots = (slots) => {\r\n    const _droneSlots = Summary.addSummaries_duplicateDroneSlots(slots);\r\n    const _slots = JSON.parse(JSON.stringify(slots));\r\n    _slots.droneSlots = _droneSlots;\r\n\r\n    return _slots;\r\n  };\r\n  // duplicate droneslots to number of typecount\r\n  static addSummaries_duplicateDroneSlots = (slots) => {\r\n    let slotCount = 0;\r\n    return slots.droneSlots.reduce((acc, slot) => {\r\n      const slotString = JSON.stringify(slot);\r\n      const _slots = new Array(slot.item.typeCount || 1).fill(false).map(() => {\r\n        const _slot = JSON.parse(slotString);\r\n        if (!!_slot.item) {\r\n          _slot.typeCount = undefined;\r\n          _slot.item.domainID = `droneSlots.${slotCount}.item`;\r\n        }\r\n        slotCount++;\r\n\r\n        return _slot;\r\n      });\r\n\r\n      return acc.concat(_slots);\r\n    }, []);\r\n  };\r\n\r\n  static getResistanceTable = (summaries, slots) => {\r\n    const _slots = JSON.parse(JSON.stringify(slots));\r\n\r\n    const resistanceSlots = Fit.mapSlots(\r\n      summaries,\r\n      (slot) => {\r\n        if (slot?.summary?.operation === \"resistance\") return slot;\r\n        else return false;\r\n      },\r\n      {\r\n        isIterate: {\r\n          midSlots: true,\r\n          lowSlots: true,\r\n        },\r\n      }\r\n    ).filter((slot) => !!slot);\r\n\r\n    if (resistanceSlots.length === 0) return {};\r\n    const records = Summary.getResistanceTable_getRecords(resistanceSlots, \"\");\r\n\r\n    const resistanceTable = {};\r\n    records.forEach((record) => {\r\n      Summary.getResistanceTable_applyState(_slots, record);\r\n\r\n      const fit = Fit.apply(_slots);\r\n      resistanceTable[record] = this.defense_resistance(fit);\r\n    });\r\n\r\n    return resistanceTable;\r\n  };\r\n  static getResistanceTable_getRecords(resistanceSlots, record) {\r\n    if (resistanceSlots.length === 0) return [record.slice(0, -1)];\r\n\r\n    const activeRecord = Summary.getResistanceTable_getRecords(\r\n      resistanceSlots.slice(1),\r\n      record.concat(`${resistanceSlots[0].summary.path}.activation|`)\r\n    );\r\n\r\n    const passiveRecord = Summary.getResistanceTable_getRecords(\r\n      resistanceSlots.slice(1),\r\n      record.concat(`${resistanceSlots[0].summary.path}.passive|`)\r\n    );\r\n    return [...activeRecord, ...passiveRecord];\r\n  }\r\n  static getResistanceTable_applyState(slots, record) {\r\n    record.split(\"|\").forEach((recordFrag) => {\r\n      const [slotType, slotNum, state] = recordFrag.split(\".\");\r\n      slots[slotType][slotNum].item.typeState = state;\r\n    });\r\n  }\r\n\r\n  static #getSummaries_modules = (slot) => {\r\n    if (!slot?.item?.typeEffectsStats) return false;\r\n    const item = slot.item;\r\n    const charge = slot.charge;\r\n\r\n    const structureHP = findAttributebyID(item, 9); //attributeID: 9, attributeName: \"Structure Hitpoints\"\r\n    const heatDamage = findAttributebyID(item, 1211); // attributeID: 1211, attributeName: \"Heat Damage\"\r\n\r\n    const moduleSummary = {\r\n      load: {\r\n        structure: { HP: structureHP },\r\n      },\r\n      capacity: {\r\n        structure: { HP: structureHP },\r\n        misc: { heatDamage: heatDamage },\r\n      },\r\n    };\r\n\r\n    const activationDataSet = Summary.createActivationDataSet(slot);\r\n    const path = item.domainID.split(\".\").slice(0, 2).join(\".\"); //eg)highSlots.1\r\n    const effectSummary = item.typeEffectsStats\r\n      .map((efft) => {\r\n        let summary = {};\r\n        let operation = false;\r\n        switch (efft.effectID) {\r\n          case 101: // effectID: 101, effectName: \"useMissiles\"\r\n          case 34: // effectID: 34, effectName: \"projectileFired\"\r\n          case 10: // effectID: 10, effectName: \"targetAttack\"\r\n          case 6995: // effectID: 6995, effectName: \"targetDisintegratorAttack\"\r\n            summary = Summary.getSummary_damage(item, charge);\r\n            if (!summary.damagePerAct.alpha) return false;\r\n            operation = \"damage\";\r\n            break;\r\n          case 4: // effectID: 4, effectName: \"shieldBoosting\"\r\n          case 26: // effectID: 26, effectName: \"structureRepair\"\r\n          case 4936: // effectID: 4936, effectName: \"fueledShieldBoosting\"\r\n          case 27: // effectID: 27, effectName: \"armorRepair\"\r\n          case 5275: // effectID: 5275, effectName: \"fueledArmorRepair\"\r\n            summary = Summary.getSummary_defense(item, charge);\r\n            operation = \"defense\";\r\n            break;\r\n          case 48: //effectID: 48, effectName: \"powerBooster\"\r\n          case 6187: //effectID: 6187, effectName: \"energyNeutralizerFalloff\"\r\n          case 6197: //effectID: 6197, effectName: \"energyNosferatuFalloff\"\r\n          case 6148: // effectID: 6184, effectName: \"shipModuleRemoteCapacitorTransmitter\"\r\n            summary = Summary.getSummary_capacitor(item, charge);\r\n            operation = \"capacitor\";\r\n            break;\r\n          case 5230: // effectID: 5230, effectName: \"modifyActiveShieldResonancePostPercent\"\r\n          case 4928: // effectID: 4928, effectName: \"adaptiveArmorHardener\" //TODO: reactive armor bonus should be calculated\r\n          case 5231: // effectID: 5231, effectName: \"modifyActiveArmorResonancePostPercent\"\r\n          case 7012: // effectID: 7012, effectName: \"moduleBonusAssaultDamageControl\"\r\n            operation = \"resistance\";\r\n            break;\r\n          default:\r\n            return false;\r\n        }\r\n\r\n        const activationPriority = Summary.getActivationPriority(efft);\r\n        activationDataSet.activationState[\"activationPriority\"] =\r\n          activationPriority;\r\n\r\n        return {\r\n          ...summary,\r\n          ...activationDataSet,\r\n          operation,\r\n          itemID: item.typeID,\r\n          chargeID: charge.typeID,\r\n          description: `${item.typeName},${charge.typeName}`,\r\n        };\r\n      })\r\n      .filter((summary) => !!summary);\r\n\r\n    if (effectSummary.length > 1)\r\n      console.error(\r\n        \"ERR: more than one summary produced in single module\",\r\n        slot\r\n      );\r\n    else return { ...moduleSummary, ...effectSummary[0], path };\r\n  };\r\n  static #getSummaries_drones = (slot) => {\r\n    if (!slot?.item?.typeEffectsStats) return false;\r\n    const item = slot.item;\r\n    const isSentry = item.marketGroupID === 911; // marketGroupID: 911 \"marketGroupName\": \"Sentry Drones\"\r\n\r\n    // These functions from Stat class is targeted for ship. modified to fit in drone in this case\r\n    const defense = this.defense_resistance({ ship: item });\r\n    const capacitor = this.capacitor_getChargeInfo({ ship: item });\r\n\r\n    const misc = this.miscellaneous({ ship: item });\r\n    const orbitVelocity = findAttributebyID(item, 508); // attributeID: 508, attributeName: \"Orbit Velocity\"\r\n    const orbitRange = findAttributebyID(item, 416); //attributeID: 416, attributeName: \"entityFlyRange\"\r\n    const maximumVelocity = findAttributebyID(item, 37); // attributeID: 37, attributeName: \"Maximum Velocity\"\r\n    misc.propulsion = {\r\n      ...misc.propulsion,\r\n      orbitVelocity,\r\n      orbitRange,\r\n      maximumVelocity,\r\n    };\r\n    const droneSumamry = {\r\n      load: {\r\n        armor: { HP: defense.armor.HP },\r\n        shield: { HP: defense.shield.HP },\r\n        structure: { HP: defense.structure.HP },\r\n        capacitor: { HP: capacitor.HP },\r\n      },\r\n      capacity: { ...defense, ...misc, capacitor },\r\n    };\r\n    const path = item.domainID.split(\".\").slice(0, 2).join(\".\");\r\n    const effectSummary = item.typeEffectsStats\r\n      .map((efft) => {\r\n        const activationDataSet = Summary.createActivationDataSet(slot);\r\n        let summary = {};\r\n        let operation = false;\r\n\r\n        switch (efft.effectID) {\r\n          case 101: // effectID: 101, effectName: \"useMissiles\"\r\n          case 34: // effectID: 34, effectName: \"projectileFired\"\r\n          case 10: // effectID: 10, effectName: \"targetAttack\"\r\n          case 6995: // effectID: 6995, effectName: \"targetDisintegratorAttack\"\r\n            summary = Summary.getSummary_drone(item);\r\n            if (!summary.damagePerAct.alpha) return false;\r\n            operation = \"damage\";\r\n            break;\r\n          default:\r\n            return false;\r\n        }\r\n        return {\r\n          ...summary,\r\n          ...activationDataSet,\r\n          operation,\r\n          itemID: item.typeID,\r\n          description: `${item.typeName}`,\r\n        };\r\n      })\r\n      .filter((summary) => !!summary);\r\n\r\n    const situation_decription =\r\n      \"Currently location is not calculated BUT! always hitted by smart bomb\";\r\n\r\n    if (effectSummary.length > 1)\r\n      console.error(\r\n        \"ERR: more than one summary produced in single module\",\r\n        slot\r\n      );\r\n    else\r\n      return {\r\n        ...droneSumamry,\r\n        ...effectSummary[0],\r\n        situation_decription,\r\n        isSentry,\r\n        isDrone: true,\r\n        path,\r\n      };\r\n  };\r\n  static createActivationDataSet = (slot) => {\r\n    const activationInfo = this.getActivationInfo(slot.item, slot.charge);\r\n\r\n    return {\r\n      activationInfo,\r\n      activationState: {\r\n        isActive: false,\r\n        lastActivation: 0,\r\n        nextActivation: 0,\r\n        nextActivationTick: 0,\r\n        activationLeft: activationInfo.activationLimit,\r\n      },\r\n    };\r\n  };\r\n  static getActivationPriority = (efft) => {\r\n    let activationPriority = 10;\r\n    switch (efft.effectID) {\r\n      case 6197: //effectID: 6197, effectName: \"energyNosferatuFalloff\"\r\n      case 48: //effectID: 48, effectName: \"powerBooster\"\r\n        activationPriority = capPrioritySet.alwaysOn;\r\n        break;\r\n      case 101: // effectID: 101, effectName: \"useMissiles\"\r\n      case 34: // effectID: 34, effectName: \"projectileFired\"\r\n      case 10: // effectID: 10, effectName: \"targetAttack\"\r\n      case 6995: // effectID: 6995, effectName: \"targetDisintegratorAttack\"\r\n        activationPriority = capPrioritySet.turretDamage;\r\n        break;\r\n      case 4: // effectID: 4, effectName: \"shieldBoosting\"\r\n        activationPriority = capPrioritySet.shieldBoost;\r\n        break;\r\n      case 26: // effectID: 26, effectName: \"structureRepair\"\r\n        activationPriority = capPrioritySet.structureBoost;\r\n        break;\r\n      case 4936: // effectID: 4936, effectName: \"fueledShieldBoosting\"\r\n        activationPriority = capPrioritySet.shieldBoostAncillaryFueled;\r\n        break;\r\n      case 27: // effectID: 27, effectName: \"armorRepair\"\r\n        activationPriority = capPrioritySet.armorBoost;\r\n        break;\r\n      case 5275: // effectID: 5275, effectName: \"fueledArmorRepair\"\r\n        activationPriority = capPrioritySet.armorBoostAncillaryFueled;\r\n        break;\r\n      case 6187: //effectID: 6187, effectName: \"energyNeutralizerFalloff\"\r\n        activationPriority = capPrioritySet.capacitorNeutralizer;\r\n        break;\r\n      case 6148: // effectID: 6184, effectName: \"shipModuleRemoteCapacitorTransmitter\"\r\n        activationPriority = capPrioritySet.capacitorTransmitter;\r\n        break;\r\n      case 5230: // effectID: 5230, effectName: \"modifyActiveShieldResonancePostPercent\"\r\n        activationPriority = capPrioritySet.shieldHardener;\r\n        break;\r\n      case 4928: // effectID: 4928, effectName: \"adaptiveArmorHardener\"\r\n      case 5231: // effectID: 5231, effectName: \"modifyActiveArmorResonancePostPercent\"\r\n        activationPriority = capPrioritySet.armorHardener;\r\n        break;\r\n      case 7012: // effectID: 7012, effectName: \"moduleBonusAssaultDamageControl\"\r\n        activationPriority = capPrioritySet.damageControl;\r\n        break;\r\n      default:\r\n        activationPriority = capPrioritySet.mostTrivial;\r\n    }\r\n\r\n    return activationPriority;\r\n  };\r\n  static getSummary_ship = (fit, location) => {\r\n    const defense = this.defense_resistance(fit);\r\n    const misc = this.miscellaneous(fit);\r\n    const capacitor = this.capacitor_getChargeInfo(fit);\r\n\r\n    return {\r\n      load: {\r\n        armor: { HP: defense.armor.HP },\r\n        shield: { HP: defense.shield.HP },\r\n        structure: { HP: defense.structure.HP },\r\n        capacitor: { HP: capacitor.HP },\r\n      },\r\n      capacity: { ...defense, ...misc, capacitor },\r\n      location: location,\r\n      description: `${fit.ship.typeName}`,\r\n    };\r\n  };\r\n\r\n  static getSummary_damage(item, charge) {\r\n    if (!item) return false;\r\n\r\n    const damagePerAct = this.damage_damagePerAct(item, charge);\r\n    const range = this.damage_range(item, charge);\r\n\r\n    return { damagePerAct, range };\r\n  }\r\n  static getSummary_drone(item) {\r\n    if (!item) return false;\r\n\r\n    const damagePerAct = this.damage_damagePerAct(item, item);\r\n    const range = this.damage_range(item, item);\r\n\r\n    return { damagePerAct, range };\r\n  }\r\n  static getSummary_defense(item, charge) {\r\n    if (!item) return false;\r\n\r\n    const bonusPerAct = this.defense_getBonusPerAct(item, charge);\r\n\r\n    return { bonusPerAct: { self: bonusPerAct } };\r\n  }\r\n  static getSummary_capacitor(item, charge) {\r\n    if (!item) return false;\r\n    const booster_bonusPerAct = findAttributebyID(charge, 67) || 0; //attributeID: 67, attributeName: \"Capacitor Bonus\"\r\n    const transfer_bonusPerAct = findAttributebyID(item, 90) || 0; // attributeID: 90, attributeName: \"Energy transfer amount\"\r\n    const neut_bonusPerAct = findAttributebyID(item, 97) || 0; // attributeID: 97, attributeName: \"Neutralization Amount\"\r\n\r\n    const isNosferatuBloodRaiderOverriden = findAttributebyID(item, 1945) === 1; //attributeID: 1945, attributeName: \"nosOverride\"\r\n    const isCapacitorTransmitter = !!findAttributebyID(item, 3423); //attributeID: 182, attributeName: \"Primary Skill required\" (3423: capacitor emission system)\r\n    const isNosferatu = !isCapacitorTransmitter && !!transfer_bonusPerAct;\r\n\r\n    const bonusPerAct_self = isCapacitorTransmitter\r\n      ? 0\r\n      : booster_bonusPerAct + transfer_bonusPerAct;\r\n    const bonusPerAct_target = isCapacitorTransmitter\r\n      ? transfer_bonusPerAct\r\n      : -transfer_bonusPerAct - neut_bonusPerAct;\r\n\r\n    const optimalRange = findAttributebyID(item, 54); //attributeID: 54, attributeName: \"Optimal Range\"\r\n    const falloffRange = findAttributebyID(item, 2044); //attributeID: 2044, attributeName: \"Effectiveness Falloff\"\r\n\r\n    return {\r\n      bonusPerAct: { self: bonusPerAct_self, target: bonusPerAct_target },\r\n      range: { optimalRange, falloffRange },\r\n      isNosferatuBloodRaiderOverriden,\r\n      isCapacitorTransmitter,\r\n      isNosferatu,\r\n    };\r\n  }\r\n}\r\n\r\nclass SimFit extends Fit {\r\n  static changeStateOfModule(slots, path, state) {\r\n    if (![\"overload\", \"activation\", \"passive\", \"offline\"].includes(state))\r\n      return false;\r\n\r\n    const targetSlot = this.toPath(slots, path);\r\n    if (!targetSlot || !targetSlot.item) return false;\r\n\r\n    targetSlot.item.typeState = state;\r\n    const fit = this.apply(slots);\r\n    return fit;\r\n  }\r\n  static toPath(slots, path) {\r\n    if (!slots || !path) return {};\r\n    return path.split(\".\").reduce((p, c) => (p && p[c]) || undefined, slots);\r\n  }\r\n}\r\n","import Fit from \"../../../../fitter/src/Fit\";\r\nimport EveMath from \"./EveMath\";\r\nimport Summary from \"./Summary\";\r\n\r\nexport default class Simulator {\r\n  static test(slots, fit1, situation) {\r\n    const summarizedSlots1 = Summary.getSummarizedSlots(\r\n      slots,\r\n      situation.onboard\r\n    );\r\n    const summarizedSlots2 = Summary.getSummarizedSlots(\r\n      fit1,\r\n      situation.hostile\r\n    );\r\n    console.log(summarizedSlots1, summarizedSlots2, situation);\r\n\r\n    Fit.mapSlots(\r\n      summarizedSlots1,\r\n      (slot) => {\r\n        if (!slot?.summary?.activationState) return false;\r\n        slot.summary.activationState.isActive = true;\r\n        slot.summary.activationState.nextActivationTick = 0;\r\n        slot.summary.activationState.nextActivation = 0;\r\n      },\r\n      {\r\n        isIterate: {\r\n          highSlots: true,\r\n          midSlots: true,\r\n          lowSlots: true,\r\n          droneSlots: true,\r\n        },\r\n      }\r\n    );\r\n\r\n    console.log(\r\n      \"CAPACITOR_BY_LEVEL\",\r\n      HAL.manageActivation_getCapUsageLevels(summarizedSlots1)\r\n    );\r\n    const capLog = [];\r\n    for (let i = 0; i < 2; i++) {\r\n      const schedules = HAL.getSchedules(summarizedSlots1, summarizedSlots2, i);\r\n      console.log(schedules);\r\n      HAL.manageSchedules(schedules, summarizedSlots1, situation.onboard);\r\n\r\n      capLog.push({ x: i, y: summarizedSlots1.summary.load.capacitor.HP });\r\n    }\r\n\r\n    console.log(capLog);\r\n  }\r\n\r\n  static simulate_oneTick = (owner, target, tick) => {\r\n    Simulator.simulate_capacitor(owner);\r\n    Simulator.simulate_shield(owner);\r\n    Fit.mapSlots(\r\n      fit,\r\n      (slot) => {\r\n        if (!slot.summary) return false;\r\n\r\n        switch (slot.summary.operation) {\r\n          case \"damage\":\r\n            Simulator.activateDamage(slot.summary, owner, target, tick);\r\n            break;\r\n          case \"defense\":\r\n            Simulator.activateDefense(slot.summary, owner, target, tick);\r\n            break;\r\n          case \"capacitor\":\r\n            Simulator.activateCapacitor(slot.summary, owner, target, tick);\r\n            break;\r\n        }\r\n      },\r\n      {\r\n        isIterate: {\r\n          highSlots: true,\r\n          midSlots: true,\r\n          lowSlots: true,\r\n          droneSlots: true,\r\n        },\r\n      }\r\n    );\r\n  };\r\n  static simulate_capacitor = (target) => {\r\n    const capacitorState = target.summary.load.capacitor;\r\n    const delta = Simulator.simulate_capacitor_getDelta(target);\r\n\r\n    // MUTATION!\r\n    capacitorState.HP += delta;\r\n    if (capacitorState.HP === 0) capacitorState.HP = 1;\r\n\r\n    return delta;\r\n  };\r\n  static simulate_passive_capacitor_getDelta = (target) => {\r\n    if (target.summary.load.capacitor.HP <= 0) return 1;\r\n\r\n    const capacitorState = target.summary.load.capacitor;\r\n    const capacitorInfo = target.summary.capacity.capacitor;\r\n\r\n    const ambientChargeRate = EveMath.getAmbientChargeRateMath(\r\n      capacitorInfo.HP,\r\n      capacitorState.HP,\r\n      capacitorInfo.bonusRate\r\n    );\r\n\r\n    return ambientChargeRate;\r\n  };\r\n  static simulate_shield = (target) => {\r\n    const shieldState = target.summary.load.shield;\r\n    const delta = Simulator.simulate_capacitor_getDelta(target);\r\n\r\n    // MUTATION!\r\n    shieldState.HP += delta;\r\n    if (shieldState.HP === 0) shieldState.HP += 1;\r\n\r\n    return delta;\r\n  };\r\n  static simulate_passive_shield_getDelta = (target) => {\r\n    if (target.summary.load.shield.HP <= 0) return 1;\r\n\r\n    const shieldState = target.summary.load.shield;\r\n    const shieldInfo = target.summary.capacity.shield;\r\n\r\n    const ambientChargeRate = EveMath.getAmbientChargeRateMath(\r\n      shieldInfo.HP,\r\n      shieldState.HP,\r\n      shieldInfo.bonusRate\r\n    );\r\n\r\n    return ambientChargeRate;\r\n  };\r\n\r\n  //Currently target boost (remote armor repair is not possible\r\n  static simulate_defense_getDelta = (summary) => {\r\n    return {\r\n      armorDelta: summary.bonusPerAct.self.armor,\r\n      shieldDelta: summary.bonusPerAct.self.shield,\r\n      structureDelta: summary.bonusPerAct.self.structure,\r\n    };\r\n  };\r\n  static activateDefense = (summary) => {\r\n    const owner = summary.root;\r\n\r\n    // MUTATION!\r\n    owner.summary.load.shield.HP += summary.bonusPerAct.self.shield;\r\n    if (owner.summary.capacity.shield.HP < owner.summary.load.shield.HP)\r\n      owner.summary.load.shield.HP = owner.summary.capacity.shield.HP;\r\n\r\n    owner.summary.load.armor.HP += summary.bonusPerAct.self.armor;\r\n    if (owner.summary.capacity.armor.HP < owner.summary.load.armor.HP)\r\n      owner.summary.load.armor.HP = owner.summary.capacity.armor.HP;\r\n\r\n    owner.summary.load.structure.HP += summary.bonusPerAct.self.structure;\r\n    if (owner.summary.capacity.structure.HP < owner.summary.load.structure.HP)\r\n      owner.summary.load.structure.HP = owner.summary.capacity.structure.HP;\r\n    /*  } */\r\n  };\r\n\r\n  static simulate_damage_getDelta = (summary) => {\r\n    const owner = summary.isDrone ? summary : summary.root;\r\n    const target = summary.target;\r\n    //prettier-ignore\r\n    const situationalModifiedSummary = Simulator.#activateDamage_getSituationalModifiedSummary(summary, owner, target);\r\n    //prettier-ignore\r\n    const alpha = Simulator.activateDamage_getAlpha(situationalModifiedSummary, target);\r\n\r\n    return {\r\n      armorDelta: -alpha.armor,\r\n      shieldDelta: -alpha.shield,\r\n      structureDelta: -alpha.structure,\r\n    };\r\n  };\r\n  static activateDamage = (summary) => {\r\n    const owner = summary.isDrone ? summary : summary.root;\r\n    const target = summary.target;\r\n    //prettier-ignore\r\n    const situationalModifiedSummary = Simulator.#activateDamage_getSituationalModifiedSummary(summary, owner, target);\r\n    //prettier-ignore\r\n    const alpha = Simulator.activateDamage_getAlpha(situationalModifiedSummary, target);\r\n    // MUTATION!\r\n    target.summary.load.shield.HP -= alpha.shield;\r\n    if (target.summary.load.shield.HP < 0) target.summary.load.shield.HP = 0;\r\n    target.summary.load.armor.HP -= alpha.armor;\r\n    if (target.summary.load.armor.HP < 0) target.summary.load.armor.HP = 0;\r\n    target.summary.load.structure.HP -= alpha.structure;\r\n    if (target.summary.load.structure.HP < 0)\r\n      target.summary.load.structure.HP = 0;\r\n  };\r\n  static activateDamage_getAlpha = (summary, target) => {\r\n    if (!summary.damagePerAct.alpha)\r\n      return { shield: 0, armor: 0, structure: 0 };\r\n\r\n    //prettier-ignore\r\n    const shieldDamage = Simulator.#activateDamage_getDamageResult(summary.damagePerAct, target, \"shield\");\r\n    if (shieldDamage.remaining.alpha <= 0.01)\r\n      return { shield: shieldDamage.appplied.alpha, armor: 0, structure: 0 };\r\n\r\n    //prettier-ignore\r\n    const armorDamage = Simulator.#activateDamage_getDamageResult(shieldDamage.remaining, target, \"armor\");\r\n    if (armorDamage.remaining.alpha <= 0.01)\r\n      return {\r\n        shield: shieldDamage.appplied.alpha,\r\n        armor: armorDamage.appplied.alpha,\r\n        structure: 0,\r\n      };\r\n\r\n    //prettier-ignore\r\n    const structureDamage = Simulator.#activateDamage_getDamageResult(armorDamage.remaining, target, \"structure\");\r\n    return {\r\n      shield: shieldDamage.appplied.alpha,\r\n      armor: armorDamage.appplied.alpha,\r\n      structure: structureDamage.appplied.alpha,\r\n    };\r\n  };\r\n  static #activateDamage_getDamageResult = (damagePerAct, target, type) => {\r\n    //prettier-ignore\r\n    const shot = Simulator.#activateDamage_getShot(damagePerAct, target, type);\r\n    const damageCapMultiplier =\r\n      target.summary.load[type].HP / shot.alpha_damaging < 1\r\n        ? target.summary.load[type].HP / shot.alpha_damaging\r\n        : 1;\r\n\r\n    const EM_applied = shot.EM_damaging * damageCapMultiplier;\r\n    const TH_applied = shot.TH_damaging * damageCapMultiplier;\r\n    const KI_applied = shot.KI_damaging * damageCapMultiplier;\r\n    const EX_applied = shot.EX_damaging * damageCapMultiplier;\r\n    const alpha_applied = EM_applied + TH_applied + KI_applied + EX_applied;\r\n\r\n    const EM_remaining = damagePerAct.EM - EM_applied - shot.EM_blocked;\r\n    const TH_remaining = damagePerAct.TH - TH_applied - shot.TH_blocked;\r\n    const KI_remaining = damagePerAct.KI - KI_applied - shot.KI_blocked;\r\n    const EX_remaining = damagePerAct.EX - EX_applied - shot.EX_blocked;\r\n    const alpha_remaining =\r\n      EM_remaining + TH_remaining + KI_remaining + EX_remaining;\r\n\r\n    return {\r\n      appplied: {\r\n        alpha: alpha_applied,\r\n        EM: EM_applied,\r\n        TH: TH_applied,\r\n        KI: KI_applied,\r\n        EX: EX_applied,\r\n      },\r\n      remaining: {\r\n        alpha: alpha_remaining,\r\n        EM: EM_remaining,\r\n        TH: TH_remaining,\r\n        KI: KI_remaining,\r\n        EX: EX_remaining,\r\n      },\r\n    };\r\n  };\r\n  static #activateDamage_getShot = (damagePerAct, target, type) => {\r\n    const EM_blocked =\r\n      (damagePerAct.EM * target.summary.capacity[type].EM) / 100;\r\n    const TH_blocked =\r\n      (damagePerAct.TH * target.summary.capacity[type].TH) / 100;\r\n    const KI_blocked =\r\n      (damagePerAct.KI * target.summary.capacity[type].KI) / 100;\r\n    const EX_blocked =\r\n      (damagePerAct.EX * target.summary.capacity[type].EX) / 100;\r\n    const alpha_blocked = EM_blocked + TH_blocked + KI_blocked + EX_blocked;\r\n\r\n    const EM_damaging = damagePerAct.EM - EM_blocked;\r\n    const TH_damaging = damagePerAct.TH - TH_blocked;\r\n    const KI_damaging = damagePerAct.KI - KI_blocked;\r\n    const EX_damaging = damagePerAct.EX - EX_blocked;\r\n    const alpha_damaging =\r\n      EM_damaging + TH_damaging + KI_damaging + EX_damaging;\r\n\r\n    return {\r\n      alpha_damaging,\r\n      EM_damaging,\r\n      TH_damaging,\r\n      KI_damaging,\r\n      EX_damaging,\r\n      alpha_blocked,\r\n      EM_blocked,\r\n      TH_blocked,\r\n      KI_blocked,\r\n      EX_blocked,\r\n    };\r\n  };\r\n  static #activateDamage_getSituationalModifiedSummary = (\r\n    summary,\r\n    owner,\r\n    target\r\n  ) => {\r\n    const situationalMul = Simulator.#activateDamage_getSituationalMul(\r\n      summary,\r\n      owner,\r\n      target\r\n    );\r\n\r\n    return {\r\n      ...summary,\r\n      damagePerAct: {\r\n        alpha: summary.damagePerAct.alpha * situationalMul,\r\n        EM: summary.damagePerAct.EM * situationalMul,\r\n        TH: summary.damagePerAct.TH * situationalMul,\r\n        KI: summary.damagePerAct.KI * situationalMul,\r\n        EX: summary.damagePerAct.EX * situationalMul,\r\n      },\r\n    };\r\n  };\r\n  static #activateDamage_getSituationalMul = (summary, owner, target) => {\r\n    if (summary.isDrone) {\r\n      //prettier-ignore\r\n      const droneAccuracy = EveMath.getDroneAccracy(summary, owner, target);\r\n\r\n      return Math.random() <= droneAccuracy\r\n        ? EveMath.getTurretRandomDamageModifier()\r\n        : 0;\r\n    } else if (!!summary.range.tracking) {\r\n      //prettier-ignore\r\n      const turretAccuracy = EveMath.getTurretAcurracy(summary, owner, target);\r\n\r\n      return Math.random() <= turretAccuracy\r\n        ? EveMath.getTurretRandomDamageModifier()\r\n        : 0;\r\n    } else if (!!summary.range.explosionRadius) {\r\n      //prettier-ignore\r\n      const launcherAccracy = EveMath.getLauncherAccuracy(summary, owner, target);\r\n\r\n      return Math.random() <= launcherAccracy\r\n        ? EveMath.getLauncherDamageModifier(summary, target)\r\n        : 0;\r\n    } else return 0;\r\n  };\r\n\r\n  static simulate_capacitor_getDelta = (summary) => {\r\n    const owner = summary.root;\r\n    const target = summary.target;\r\n    //prettier-ignore\r\n    const situationalModifiedSummary = Simulator.#activateCapacitor_getSituationalModifiedSummary(summary, owner, target);\r\n\r\n    return {\r\n      target: {\r\n        capacitorDelta: situationalModifiedSummary.bonusPerAct.target,\r\n      },\r\n      self: {\r\n        capacitorDelta: situationalModifiedSummary.bonusPerAct.owner,\r\n      },\r\n    };\r\n  };\r\n\r\n  static activateCapacitor = (summary) => {\r\n    const owner = summary.root;\r\n    const target = summary.target;\r\n    //prettier-ignore\r\n    const situationalModifiedSummary = Simulator.#activateCapacitor_getSituationalModifiedSummary(summary, owner, target);\r\n\r\n    // MUTATION!\r\n    target.summary.load.capacitor.HP +=\r\n      situationalModifiedSummary.bonusPerAct.target;\r\n    if (target.summary.load.capacitor.HP < 0)\r\n      target.summary.load.capacitor.HP = 0;\r\n    if (target.summary.capacity.capacitor.HP < target.summary.load.capacitor.HP)\r\n      target.summary.load.capacitor.HP = target.summary.capacity.capacitor.HP;\r\n\r\n    owner.summary.load.capacitor.HP +=\r\n      situationalModifiedSummary.bonusPerAct.owner;\r\n    if (owner.summary.load.capacitor.HP < 0)\r\n      owner.summary.load.capacitor.HP = 0;\r\n    if (owner.summary.capacity.capacitor.HP < owner.summary.load.capacitor.HP)\r\n      owner.summary.load.capacitor.HP = owner.summary.capacity.capacitor.HP;\r\n  };\r\n  static #activateCapacitor_getSituationalModifiedSummary = (\r\n    summary,\r\n    owner,\r\n    target\r\n  ) => {\r\n    const ownerCapacitorHP = owner.summary.load.capacitor.HP;\r\n    const targetCapacitorHP = target.summary.load.capacitor.HP;\r\n\r\n    // prettier-ignore\r\n    const situationalMul = Simulator.#activateCapacitor_getSituationalMul(summary, owner, target);\r\n    const bonusPerActOwner = summary.bonusPerAct.self * situationalMul;\r\n    const bonusPerActTarget = summary.bonusPerAct.target * situationalMul;\r\n\r\n    if (summary.isNosferatu) {\r\n      const maxBonusPerAct = Math.min(bonusPerActOwner, targetCapacitorHP);\r\n      let symmetricBonusPerAct = maxBonusPerAct;\r\n\r\n      if (\r\n        !summary.isNosferatuBloodRaiderOverriden &&\r\n        targetCapacitorHP + bonusPerActTarget < ownerCapacitorHP\r\n      )\r\n        symmetricBonusPerAct = Math.max(\r\n          Math.floor((targetCapacitorHP - ownerCapacitorHP) / 2),\r\n          0\r\n        );\r\n      symmetricBonusPerAct = Math.min(maxBonusPerAct, symmetricBonusPerAct);\r\n      return {\r\n        ...summary,\r\n        bonusPerAct: {\r\n          self: symmetricBonusPerAct,\r\n          target: -symmetricBonusPerAct,\r\n        },\r\n      };\r\n    }\r\n\r\n    return {\r\n      ...summary,\r\n      bonusPerAct: {\r\n        owner: bonusPerActOwner,\r\n        target: bonusPerActTarget,\r\n      },\r\n    };\r\n  };\r\n  static #activateCapacitor_getSituationalMul = (summary, owner, target) => {\r\n    const rangeModifier = EveMath.getRangeModifier(summary, owner, target);\r\n\r\n    const isCapacitorBooster =\r\n      !summary.isNosferatuBloodRaiderOverriden &&\r\n      !summary.isCapacitorTransmitter &&\r\n      !summary.isNosferatu;\r\n\r\n    return isCapacitorBooster ? 1 : rangeModifier;\r\n  };\r\n\r\n  static simulateActivationCapUse = (summary) => {\r\n    const capacitorState =\r\n      summary.load.capacitor || summary.root.summary.load.capacitor;\r\n    const state = summary.activationState;\r\n    const info = summary.activationInfo;\r\n\r\n    // MUTATION!\r\n    capacitorState.HP -= info.activationCost;\r\n    state.activationLeft--;\r\n\r\n    return summary;\r\n  };\r\n  static simulateActivation = (summary) => {\r\n    const capacitorState =\r\n      summary.load.capacitor || summary.root.summary.load.capacitor;\r\n    const state = summary.activationState;\r\n    const info = summary.activationInfo;\r\n\r\n    // MUTATION!\r\n    capacitorState.HP -= info.activationCost;\r\n    state.activationLeft--;\r\n    state.lastActivation = state.nextActivation;\r\n\r\n    // Check if ammo left is 0, set time\r\n    if (state.activationLeft === 0) {\r\n      state.nextActivation =\r\n        state.lastActivation + info.duration + info.reloadTime;\r\n      state.activationLeft = info.activationLimit;\r\n    } else\r\n      state.nextActivation = Number(\r\n        (state.lastActivation + info.duration).toFixed(10)\r\n      );\r\n\r\n    state.nextActivationTick = Math.floor(state.nextActivation);\r\n\r\n    return summary;\r\n  };\r\n}\r\nexport class HAL {\r\n  static getSchedules(summarizedSlots, target, tick) {\r\n    HAL.getSchedules_setTarget(summarizedSlots, target);\r\n    return Fit.mapSlots(\r\n      summarizedSlots,\r\n      (summarizedSlot) => {\r\n        if (!summarizedSlot.summary) return false;\r\n        return HAL.#getSchedules_getFragment(summarizedSlot.summary, tick);\r\n      },\r\n      {\r\n        isIterate: {\r\n          highSlots: true,\r\n          midSlots: true,\r\n          lowSlots: true,\r\n          droneSlots: true,\r\n        },\r\n      }\r\n    )\r\n      .reduce((acc, fragment) => {\r\n        if (!fragment) return acc;\r\n        return acc.concat(fragment);\r\n      }, [])\r\n      .sort((a, b) => a.time - b.time);\r\n  }\r\n  static getSchedules_setTarget = (summarizedSlots, target) => {\r\n    Fit.mapSlots(\r\n      summarizedSlots,\r\n      (summarizedSlot) => {\r\n        if (!summarizedSlot.summary) return false;\r\n        let _target = false;\r\n        switch (summarizedSlot?.summary?.operation) {\r\n          case \"damage\":\r\n          case \"defense\":\r\n          case \"capacitor\":\r\n            _target = target;\r\n            break;\r\n          default:\r\n            _target = false;\r\n            break;\r\n        }\r\n        summarizedSlot.summary[\"target\"] = _target;\r\n      },\r\n      {\r\n        isIterate: {\r\n          highSlots: true,\r\n          midSlots: true,\r\n          lowSlots: true,\r\n          droneSlots: true,\r\n        },\r\n      }\r\n    );\r\n  };\r\n  static #getSchedules_getFragment = (summary, tick) => {\r\n    const _summary = HAL.#getSchedules_copySummary(summary);\r\n    const fragment = HAL.#getSchedules_getFragmentRecursion(_summary, tick);\r\n    return fragment.map((schedule) => {\r\n      schedule[\"summary\"] = summary;\r\n      return schedule;\r\n    });\r\n  };\r\n  static #getSchedules_copySummary = (summary) => {\r\n    const _summary = JSON.parse(\r\n      JSON.stringify({ ...summary, root: undefined, target: undefined })\r\n    );\r\n    if (!!_summary?.activationState)\r\n      Object.keys(_summary.activationState).forEach((key) => {\r\n        if (_summary.activationState[key] === null)\r\n          // MUTATION!!\r\n          _summary.activationState[key] = Infinity;\r\n      });\r\n    if (!!_summary?.activationInfo)\r\n      Object.keys(_summary.activationInfo).forEach((key) => {\r\n        if (_summary.activationInfo[key] === null)\r\n          // MUTATION!!\r\n          _summary.activationInfo[key] = Infinity;\r\n      });\r\n\r\n    return _summary;\r\n  };\r\n  static #getSchedules_getFragmentRecursion = (summary, tick) => {\r\n    if (\r\n      !summary?.activationState?.isActive ||\r\n      summary?.activationState?.nextActivationTick !== tick\r\n    )\r\n      return [];\r\n    const currentTime = summary.activationState.nextActivation;\r\n    const state = summary.activationState;\r\n    const info = summary.activationInfo;\r\n    //prettier-ignore TODO: for testing, check tick is okay\r\n    if (state.isActive && state.nextActivationTick < tick)\r\n      console.warn(\"ERR: Tick is not in sync\");\r\n\r\n    // MUTATION!\r\n    state.activationLeft--;\r\n    state.lastActivation = state.nextActivation;\r\n\r\n    // Check if ammo left is 0, set time\r\n    if (state.activationLeft === 0) {\r\n      state.nextActivation =\r\n        state.lastActivation + info.duration + info.reloadTime;\r\n      state.activationLeft = info.activationLimit;\r\n    } else\r\n      state.nextActivation = Number(\r\n        (state.lastActivation + info.duration).toFixed(10)\r\n      );\r\n\r\n    state.nextActivationTick = Math.floor(state.nextActivation);\r\n\r\n    // Check if next activation is in same tick\r\n    let subSecSchedule = [];\r\n    if (state.nextActivationTick === tick)\r\n      subSecSchedule = HAL.#getSchedules_getFragmentRecursion(summary, tick);\r\n\r\n    return [{ time: currentTime }, ...subSecSchedule];\r\n  };\r\n\r\n  static manageSchedules(schedules, summarizedSlot, location) {\r\n    schedules.forEach((schedule) => {\r\n      if (!HAL.manageSchedules_validate(schedule.summary)) {\r\n        // MUTATION!\r\n        schedule.summary.activationState.isActive = false;\r\n        if (schedule.summary.operation === \"resistance\")\r\n          Summary.updateSummaries(summarizedSlot, location);\r\n\r\n        return;\r\n      } // TODO: loop through schedules with tick is moving\r\n\r\n      HAL.#manageSchedules_executeSchedule(schedule);\r\n    });\r\n  }\r\n  static #manageSchedules_executeSchedule = (schedule) => {\r\n    Simulator.simulateActivation(schedule.summary);\r\n    switch (schedule.summary.operation) {\r\n      case \"damage\":\r\n        Simulator.activateDamage(schedule.summary);\r\n        break;\r\n      case \"defense\":\r\n        Simulator.activateDefense(schedule.summary);\r\n        break;\r\n      case \"capacitor\":\r\n        Simulator.activateCapacitor(schedule.summary);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  static manageSchedules_validate(summary) {\r\n    if (!summary || !summary.activationState.isActive) return false;\r\n\r\n    const isCapacitorValidated = HAL.manageSchedules_validateCapacitor(summary);\r\n    const isStructureValidated = HAL.manageSchedules_validateStructure(summary);\r\n    if (!isCapacitorValidated || !isStructureValidated) return false;\r\n\r\n    return true;\r\n  }\r\n  static manageSchedules_validateCapacitor(summary) {\r\n    const activationInfo = summary.activationInfo;\r\n    const capacitorState =\r\n      summary?.load?.capacitor || summary.root.summary.load.capacitor;\r\n\r\n    if (capacitorState.HP < activationInfo.activationCost) return false;\r\n    else return true;\r\n  }\r\n  static manageSchedules_validateStructure(summary) {\r\n    const structureHP = summary?.load?.structure?.HP;\r\n    const rootStructureHP = summary.root.summary.load.structure.HP;\r\n\r\n    if (structureHP <= 0 || rootStructureHP <= 0) return false;\r\n    else return true;\r\n  }\r\n\r\n  // currently on halt. no ai included\r\n  static manageActivation(summarizedSlots, tick) {\r\n    // Find out current tick's cap usage amount\r\n    const capUsage = 0;\r\n    Fit.mapSlots(\r\n      summarizedSlots,\r\n      (summarizedSlot) => {\r\n        if (summarizedSlot.summary.activationState.nextActivationTick != tick)\r\n          return false;\r\n\r\n        capUsage += summarizedSlot.summary.activationInfo.activationCost;\r\n      },\r\n      {\r\n        isIterate: {\r\n          highSlots: true,\r\n          midSlots: true,\r\n          lowSlots: true,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (\r\n      summarizedSlots.summary.load.capacitor.HP - capUsage <\r\n      summarizedSlots.summary.capacity.capacitor.HP * 0.3\r\n    )\r\n      return;\r\n  }\r\n  static manageActivation_getCapUsageLevels = (summarizedSlots) => {\r\n    return [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((activationPriority) => {\r\n      const capUsageRates = [];\r\n      Fit.mapSlots(\r\n        summarizedSlots,\r\n        (slot) => {\r\n          const info = slot?.summary?.activationInfo;\r\n          const state = slot?.summary?.activationState;\r\n          if (!info || !state || state.activationPriority > activationPriority)\r\n            return 0;\r\n          const capUsageRate = info.activationCost / info.duration || 0;\r\n          capUsageRates.push({ capUsageRate, slot });\r\n        },\r\n        {\r\n          isIterate: {\r\n            highSlots: true,\r\n            midSlots: true,\r\n            lowSlots: true,\r\n          },\r\n        }\r\n      );\r\n\r\n      return { activationPriority, capUsageRates };\r\n    });\r\n  };\r\n}\r\n","export default function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}","import Simulator from \"./Simulator\";\r\n\r\nexport const simulate = (slots, slots1, situation) => {\r\n  Simulator.test(slots, slots1, situation);\r\n};\r\n"],"sourceRoot":""}